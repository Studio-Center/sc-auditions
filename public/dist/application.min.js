"use strict";var ApplicationConfiguration=function(){var applicationModuleName="studio-center-auditions";return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngRoute","ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngAudio","ui.bootstrap.datetimepicker","rt.encodeuri","angularMoment","textAngular","btford.socket-io","ngCookies","base64","ngSanitize"],registerModule:function(moduleName,dependencies){angular.module(moduleName,dependencies||[]).constant("IS_NOT_MOBILE",function(){var check=!1;return function(a){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))&&(check=!0)}(navigator.userAgent||navigator.vendor||window.opera),!check}()),angular.module(applicationModuleName).requires.push(moduleName)}}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("clients"),ApplicationConfiguration.registerModule("core"),angular.module("core").constant("angularMomentConfig",{timezone:"America/New_York"}),ApplicationConfiguration.registerModule("logs"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("reports"),ApplicationConfiguration.registerModule("talents"),ApplicationConfiguration.registerModule("tools"),ApplicationConfiguration.registerModule("typecasts"),ApplicationConfiguration.registerModule("users"),angular.module("clients").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Clients","clients","dropdown","/clients/projects",!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director","client","client-client"],1),Menus.addSubMenuItem("topbar","clients","Portal","clients/projects",!1),Menus.addSubMenuItem("topbar","clients","Start A New Audition Project","clients/new-audition-form",!1)}]),angular.module("clients").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("clientProjectsList",{url:"/clients/projects",templateUrl:"modules/clients/views/client-list-projects.client.view.html"}).state("clientProjectsSingleList",{url:"/clients/projects/:projectId",templateUrl:"modules/clients/views/client-list-projects.client.view.html"}).state("newAudProject",{url:"/clients/new-audition-form",templateUrl:"modules/clients/views/new-audition-project.client.view.html"}).state("newAudProjectThanks",{url:"/clients/new-audition-form/thanks",templateUrl:"modules/clients/views/new-audition-project-thanks.client.view.html"})}]),angular.module("clients").controller("BookModalController",["$scope","$stateParams","$location","Authentication","Projects","$upload","ngAudio","$http","$modalInstance","data","$rootScope","IS_NOT_MOBILE",function($scope,$stateParams,$location,Authentication,Projects,$upload,ngAudio,$http,$modalInstance,data,$rootScope,IS_NOT_MOBILE){$scope.authentication=Authentication,$scope.data=data,$scope.selectedAuds=[],$scope.selectedAudsNew=[],$scope.projAuditions=[],$scope.audio="",$scope.lastAudioID=0,$scope.audioStatus=0,$scope.watchersObj={},$scope.$on("$destroy",function(event){});var loadAuditions=function(){$http.post("/projects/loadAuditions",{projectId:$stateParams.projectId}).success(function(data,status,headers,config){$scope.projAuditions=data}).error(function(data,status,headers,config){console.log("Problem loading project auditions.")})},saveAudition=function(audition){$http.post("/projects/saveAudition",{audition:audition}).success(function(data,status,headers,config){loadAuditions()}).error(function(data,status,headers,config){console.log("Problem saving audition.")})};$scope.findOneById=function(id){$scope.selectedAuditions=[],$scope.hideList=[],$stateParams.projectId=id,$scope.findOne(),loadAuditions()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$scope.watchersObj.data=$scope.$watchCollection("data",function(val){void 0!==$scope.data&&$scope.findOneById($scope.data.project)}),$scope.watchersObj.projAuditions=$scope.$watchCollection("projAuditions",function(val){if($scope.selectedAudsNew=[],void 0!==$scope.projAuditions){var limit=$scope.projAuditions.length,i=0;for(i=0;i<limit;++i)!0!==$scope.projAuditions[i].selected||void 0!==$scope.projAuditions[i].booked&&!1!==$scope.projAuditions[i].booked||$scope.selectedAudsNew.push($scope.projAuditions[i])}}),$scope.watchersObj.project=$scope.$watchCollection("project",function(val){$scope.watchersObj.project.auditions=$scope.$watchCollection("project.auditions",function(val){if($scope.selectedAuds=[],void 0!==$scope.project.auditions){var limit=$scope.project.auditions.length,i=0;for(i=0;i<limit;++i)!0!==$scope.project.auditions[i].selected||void 0!==$scope.project.auditions[i].booked&&!1!==$scope.project.auditions[i].booked||$scope.selectedAuds.push($scope.project.auditions[i])}})}),$scope.updateNoRefresh=function(){$http.post("/projects/updateNoRefresh",{project:$scope.project}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data),$scope.processing=!1})},$scope.cancel=function(){"object"==typeof $scope.audio&&$scope.audio.stop(),$modalInstance.dismiss("cancel")},$scope.verifyAudioSingle=function(audition){return"object"==typeof audition.file},$scope.verifyAudio=function(key){return"object"==typeof $scope.project.auditions[key]&&"object"==typeof $scope.project.auditions[key].file},$scope.updatePlayCnt=function(filename){for(var i=0;i<$scope.project.auditions.length;++i)$scope.project.auditions[i].file.name===filename&&(void 0===$scope.project.auditions[i].playCnt?$scope.project.auditions[i].playCnt=1:$scope.project.auditions[i].playCnt+=1);$scope.updateNoRefresh()},$scope.updatePlayCntSingle=function(audition){void 0===audition.playCnt?audition.playCnt=1:audition.playCnt+=1,saveAudition(audition)},$scope.stopAudio=function(){"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop(),$scope.audioStatus=2)},$scope.playAudio=function(key,filename,fileDir){var fileName="";if(fileName=void 0===fileDir?"/res/auditions/"+$scope.project._id+"/"+filename:fileDir+"/"+filename,IS_NOT_MOBILE){if(key!==$scope.lastAudioID&&"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop()),"object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus&&"object"==typeof $scope.audio)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus&&"object"==typeof $scope.audio)return $scope.audio.play(),$scope.audioStatus=1,void $scope.updatePlayCnt(filename);$scope.audio=ngAudio.load(fileName).play(),$scope.loop=0,$scope.audioStatus=1,$scope.updatePlayCnt(filename),$scope.lastAudioID=key}else void 0===$scope.audio.paused||void 0===$scope.audio.filename||$scope.audio.paused&&$scope.audio.currentTime>0&&!$scope.audio.ended?($scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key,$scope.audio.mobile=!0):$scope.audio.filename!==fileName?($scope.audio.pause(),$scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key):($scope.audio.pause(),$scope.audioStatus=0)},$scope.playAudioSingle=function(key,audition,fileDir){var fileName="";if(fileName=void 0===fileDir?"/res/auditions/"+$scope.project._id+"/"+audition.file.name:fileDir+"/"+audition.file.name,IS_NOT_MOBILE){if(key!==$scope.lastAudioID&&"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop()),"object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),$scope.audioStatus=1,void $scope.updatePlayCntSingle(audition);$scope.audio=ngAudio.load(fileName).play(),$scope.loop=0,$scope.audioStatus=1,$scope.updatePlayCntSingle(audition),$scope.lastAudioID=key}else void 0===$scope.audio.paused||void 0===$scope.audio.filename||$scope.audio.paused&&$scope.audio.currentTime>0&&!$scope.audio.ended?($scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key,$scope.audio.mobile=!0):$scope.audio.filename!==fileName?($scope.audio.pause(),$scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key):($scope.audio.pause(),$scope.audioStatus=0)},$scope.updateRatingSingle=function(audition,redirect){var i=0,rateLimit=0;redirect=void 0===redirect||redirect;var ratingCnt=0,avgRating=0;if(void 0!==audition.rating){for(rateLimit=audition.rating.length,i=0;i<rateLimit;++i)audition.rating[i].userId===Authentication.user._id?(audition.rating.splice(i,1),audition.curRating=$scope.selCheckVal):avgRating+=audition.rating[i].value;ratingCnt+=audition.rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};audition.rating.push(rating),audition.avgRating=avgRating,saveAudition(audition)},$scope.bookSelected=function(){$http.post("/projects/bookAuditions",{data:$scope.data}).success(function(data,status,headers,config){$rootScope.$broadcast("refreshProject",$scope.data.project),$modalInstance.close()}).error(function(data,status,headers,config){console.log("Problem booking auditions.")})}}]),angular.module("clients").controller("ClientsController",["$scope","$stateParams","$location","Authentication","Projects","$upload","ngAudio","ngAudioGlobals","$http","$modal","$rootScope","Socket","$cookies","$window","IS_NOT_MOBILE",function($scope,$stateParams,$location,Authentication,Projects,$upload,ngAudio,ngAudioGlobals,$http,$modal,$rootScope,Socket,$cookies,$window,IS_NOT_MOBILE){$scope.authentication=Authentication,$scope.projectsTotalCnt=0,$scope.project={},$scope.audio="",$scope.lastAudioID=0,$scope.audioStatus=0,$scope.newLead={},ngAudioGlobals.unlock=!1,$scope.clientNotes="",$scope.projAuditions=[],$scope.newProject={title:"",estimatedCompletionDate:"",notifyClient:!0,client:[],scripts:[],copiedScripts:[],referenceFiles:[],copiedReferenceFiles:[],talent:[]},$scope.predicate="",$scope.hide=0,$scope.max=5,$scope.isReadonly=!1,$scope.ratings=[],$scope.ratingsAvg=[],$scope.selectedAuditions=[],$scope.hideList=[],$scope.$on("$destroy",function(event){Socket.removeAllListeners()}),$scope.gatherToAddresses=function(type){var emailObj={email:{projectId:$scope.project._id,to:[],bcc:[],subject:"",message:""}},project=$scope.project,l=0,limit=project.talent.length;angular.extend($scope,emailObj);var toEmails=[],emailCnt=0,re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;if(toEmails[emailCnt]=Authentication.user.email,"updateTalent"!==type&&"updateTeam"!==type&&"updateClientClient"!==type&&"updateClient"!==type&&"saveAudtionNote"!==type&&"saveScriptNote"!==type&&"saveDiscussion"!==type&&"updateStatus"!==type)for(l=0;l<limit;++l)""!==project.talent[l].email&&re.test(project.talent[l].email)&&(emailCnt+=1,toEmails[emailCnt]=project.talent[l].email);$scope.email.to=toEmails},$scope.updateNoRefresh=function(){$http.post("/projects/updateNoRefresh",{project:$scope.project}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data),$scope.processing=!1})},$scope.find=function(){$scope.projects=Projects.query()};var loadAuditions=function(){$http.post("/projects/loadAuditions",{projectId:$stateParams.projectId}).success(function(data,status,headers,config){$scope.projAuditions=data}).error(function(data,status,headers,config){console.log("Problem loading project auditions.")})};$scope.findOne=function(){$stateParams.projectId&&($scope.project=Projects.get({projectId:$stateParams.projectId}),loadAuditions())},$rootScope.$on("refreshProject",function(event,args){$scope.findOneById(args)}),$scope.findOneById=function(id){$scope.selectedAuditions=[],$scope.hideList=[],$stateParams.projectId=id,$scope.findOne(),$scope.curRatings()},Socket.on("auditionUpdate",function(pojectID){var project=$scope.project;String(pojectID.id)===String(project._id)&&loadAuditions()}),Socket.on("projectUpdate",function(pojectData){String(pojectData.id)===String($scope.project._id)&&$http.post("/projects/getproject",{id:$scope.project._id}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data)})}),$scope.lead=function(){$scope.submitted=!0,$http.post("/projects/lead",{firstName:$scope.newLead.firstName||"",lastName:$scope.newLead.lastName||"",company:$scope.newLead.company||"",phone:$scope.newLead.phone||"",email:$scope.newLead.email||"",describe:$scope.newLead.describe||"",scripts:$scope.newProject.scripts||""}).success(function(data,status,headers,config){$location.path("/clients/new-audition-form/thanks")})},$scope.leadFormPop=function(){"object"==typeof Authentication.user&&($scope.newLead.firstName=Authentication.user.firstName||"",$scope.newLead.lastName=Authentication.user.lastName||"",$scope.newLead.company=Authentication.user.company||"",$scope.newLead.phone=Authentication.user.phone||"",$scope.newLead.email=Authentication.user.email||"")};var performUploadTempScript=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/script/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.newProject.scripts.push(data[0])})};$scope.uploadTempScript=function($files){angular.forEach($files,function(file,key){performUploadTempScript(file,key,$files)})},$scope.hoveringOver=function(value,key,object){$scope.overStar=value,$scope.percent=value/$scope.max*100,$scope.selCheckVal=value},$scope.curRatings=function(){var auditions=$scope.project.auditions,limit=0,i=0,j=0;if(void 0!==$scope.project&&auditions)for(limit=auditions.length,i=0,j=0,j=0;j<limit;++j)for(i=0;i<auditions[j].rating.length;++i)auditions[j].rating[i].userId===Authentication.user._id&&(auditions[j].curRating=auditions[j].rating[i].value);if(void 0!==$scope.projAuditions)for(limit=$scope.projAuditions.length,i=0,j=0,j=0;j<limit;++j)for(i=0;i<$scope.projAuditions[j].rating.length;++i)$scope.projAuditions[j].rating[i].userId===Authentication.user._id&&($scope.projAuditions[j].curRating=$scope.projAuditions[j].rating[i].value)},$scope.lookUpRating=function(key){var ratings=$scope.project.auditions[key].rating,limit=ratings.length,i=0;for(i=0;i<limit;++i)if(ratings[i].userId===Authentication.user._id)return ratings[i].value},$scope.updateRating=function(path,redirect){redirect=void 0===redirect||redirect;var key,ratingCnt=0,avgRating=0,auditions=$scope.project.auditions,limit=auditions.length,j=0,i=0;for(j=0;j<limit;++j)auditions[j].file.path===path&&(key=j);if(void 0!==auditions[key]&&void 0!==auditions[key].rating){var ratingLimit=auditions[key].rating.length;for(i=0;i<ratingLimit;++i)auditions[key].rating[i].userId===Authentication.user._id?(auditions[key].rating.splice(i,1),auditions[key].curRating=$scope.selCheckVal):avgRating+=auditions[key].rating[i].value;ratingCnt+=auditions[key].rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};auditions[key].rating.push(rating),auditions[key].avgRating=avgRating,$scope.updateNoRefresh()},$scope.updateFavorite=function(path){var key,favoriteVal=1,j=0,auditions=$scope.project.auditions,limit=auditions.length;for(j=0;j<limit;++j)auditions[j].file.path===path&&(key=j);void 0!==auditions[key].favorite&&1===auditions[key].favorite&&(favoriteVal=0),auditions[key].favorite=favoriteVal,1===auditions[key].favorite?!1===auditions[key].selected&&(auditions[key].selected=!0):!0===auditions[key].selected&&(auditions[key].selected=!1),$scope.updateNoRefresh()},$scope.updateSelected=function(path){var key,auditions=$scope.project.auditions,limit=auditions.length,j=0;for(j=0;j<limit;++j)auditions[j].file.path===path&&(key=j);auditions[key].selected=!auditions[key].selected,$scope.updateNoRefresh()};var saveAudition=function(audition){$http.post("/projects/saveAudition",{audition:audition}).success(function(data,status,headers,config){loadAuditions()}).error(function(data,status,headers,config){console.log("Problem saving audition.")})};$scope.updateSelectedSingle=function(audition){!0===audition.selected?audition.selected=!1:audition.selected=!0,saveAudition(audition)},$scope.checkSelectedSingle=function(audition){if(!0===audition.selected)return!0},$scope.lookUpRatingSingle=function(audition){var ratings=audition.rating,limit=ratings.length,i=0;for(i=0;i<limit;++i)if(ratings[i].userId===Authentication.user._id)return ratings[i].value},$scope.hideAuditionSingle=function(audition){audition.hidden=!0,saveAudition(audition)},$scope.showAuditionSingle=function(audition){audition.hidden=!1,saveAudition(audition)},$scope.isDisplayedSingle=function(audition){return!0!==audition.hidden||!0!==$scope.hideSelected},$scope.updateFavoriteSingle=function(audition){var favoriteVal=1;void 0!==audition.favorite&&1===audition.favorite&&(favoriteVal=0),audition.favorite=favoriteVal,1===audition.favorite?!1===audition.selected&&(audition.selected=!0):!0===audition.selected&&(audition.selected=!1),saveAudition(audition)},$scope.updateRatingSingle=function(audition,redirect){var i=0,rateLimit=0;redirect=void 0===redirect||redirect;var ratingCnt=0,avgRating=0;if(void 0!==audition.rating){for(rateLimit=audition.rating.length,i=0;i<rateLimit;++i)audition.rating[i].userId===Authentication.user._id?(audition.rating.splice(i,1),audition.curRating=$scope.selCheckVal):avgRating+=audition.rating[i].value;ratingCnt+=audition.rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};audition.rating.push(rating),audition.avgRating=avgRating,saveAudition(audition)},$scope.checkSelected=function(path){var auditions=$scope.project.auditions,limit=auditions.length,j=0;for(j=0;j<limit;++j)if(auditions[j].file.path===path&&!0===auditions[j].selected)return!0},$scope.compareDates=function(projDate){var now=new Date;return projDate=new Date(projDate),Math.abs(projDate-now)/36e5<=1},$scope.compareDatesDay=function(projDate){var oneDay=864e5,now=new Date;projDate=new Date(projDate);var diffDays=Math.round(Math.abs((projDate.getTime()-now.getTime())/oneDay));return Number(diffDays)>=1},$scope.checkPassed=function(projDate){var now=new Date;return projDate=new Date(projDate),now>projDate},$scope.isHidden=function(filename){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)if(auditions[i].file.path===filename)return!0;return!1},$scope.isDisplayed=function(filename){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)if(auditions[i].file.path===filename)return!0!==auditions[i].hidden||!0!==$scope.hideSelected;return!1},$scope.hiddenAudsCnt=function(){var hidCnt=0,auditions=$scope.project.auditions,auditionsNew=$scope.projAuditions,limit=auditions.length,limitNew=auditionsNew.length,i=0;for(i=0;i<limit;++i)!0===auditions[i].hidden&&(hidCnt+=1);for(i=0;i<limitNew;++i)!0===auditionsNew[i].hidden&&(hidCnt+=1);return hidCnt},$scope.downloadAllAuditions=function(){$http.post("/projects/downloadallauditions",{project:$scope.project}).success(function(data,status,headers,config){setTimeout(function(){window.location.href="res/archives/"+encodeURIComponent(data.zip)},1e3)})};var bookedAudsDL=function(bookedAuds){$http.post("/projects/downloadBookedAuditions",{projectId:$scope.project._id,projectTitle:$scope.project.title,bookedAuds:bookedAuds}).success(function(data,status,headers,config){window.location.href="res/archives/"+encodeURIComponent(data.zip)}).error(function(data,status,headers,config){console.log("Problem gathering audition files. "+JSON.stringify(data))})};$scope.downloadBookedAuditions=function(){var bookedAuds=[],auditions=$scope.project.auditions,auditionsNew=$scope.projAuditions;auditions.length,auditionsNew.length,angular.forEach(auditionsNew,function(audition,key){!0===audition.booked&&bookedAuds.push(audition.file.name)}),bookedAuds.length>0&&bookedAudsDL(bookedAuds)};var audsSelDL=function(selectedAuds){$http.post("/projects/downloadSelectedAuditions",{projectId:$scope.project._id,projectTitle:$scope.project.title,selectedAuds:selectedAuds}).success(function(data,status,headers,config){window.location.href="res/archives/"+encodeURIComponent(data.zip)}).error(function(data,status,headers,config){console.log("Problem gathering audition files. "+JSON.stringify(data))})};$scope.downloadSelectedAuditions=function(){var selectedAuds=[],auditions=$scope.project.auditions,auditionsNew=$scope.projAuditions;auditions.length,auditionsNew.length,angular.forEach(auditionsNew,function(audition,key){!0===audition.booked?selectedAuds.push(audition.file.name):!0===audition.selected&&selectedAuds.push(audition.file.name)}),selectedAuds.length>0&&audsSelDL(selectedAuds)},$scope.bookSelectedShow=function(){var auditions=$scope.project.auditions,auditionsNew=$scope.projAuditions,limit=auditions.length,limitNew=auditionsNew.length,i=0;for(i=0;i<limit;++i)if(!0===auditions[i].selected)return!0;for(i=0;i<limitNew;++i)if(!0===auditionsNew[i].selected)return!0;return!1},$scope.bookShow=function(){var auditions=$scope.project.auditions,auditionsNew=$scope.projAuditions,limit=auditions.length,limitNew=auditionsNew.length,i=0;for(i=0;i<limit;++i)if(!0===auditions[i].selected&&(void 0===auditions[i].booked||!1===auditions[i].booked))return!0;for(i=0;i<limitNew;++i)if(!0===auditionsNew[i].selected&&(void 0===auditionsNew[i].booked||!1===auditionsNew[i].booked))return!0;return!1},$scope.bookedShow=function(){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)if(!0===auditions[i].booked)return!0;return!1},$scope.hideSelected=!0,$scope.hideSelectedAuditions=function(){$scope.hideSelected=!$scope.hideSelected},$scope.saveClientNote=function(){if(void 0!==$scope.clientNotes&&""!==this.clientNotes){var now=new Date,item={date:now.toJSON(),userid:Authentication.user._id,username:Authentication.user.displayName,item:this.clientNotes,deleted:!1};$scope.project.clientNotes.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=$scope.project.title+" client note added",$scope.email.message="Client Note Item: "+this.clientNotes+"<br>",$scope.email.message+="Project: "+$scope.project.title+"<br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()?":"+$location.port():"")+"/#!/projects/"+$scope.project._id+"<br>",this.clientNotes="",$http.post("/projects/sendemail",{email:$scope.email}),$scope.updateNoRefresh()}},$scope.bookSelectedAuditions=function(){$modal.open({animation:!0,templateUrl:"modules/clients/views/book-auditon-modal.client.view.html",controller:"BookModalController",resolve:{data:function(){return{project:$scope.project._id}}}}).result.then(function(selectedItem){},function(){})},$scope.verifyAudioSingle=function(audition){return"object"==typeof audition.file},$scope.verifyAudio=function(key){var auditions=$scope.project.auditions;return"object"==typeof auditions[key]&&"object"==typeof auditions[key].file},$scope.hideAudition=function(filename){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)auditions[i].file.path===filename&&(auditions[i].hidden=!0,$scope.updateNoRefresh())},$scope.showAudition=function(filename){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)auditions[i].file.path===filename&&(auditions[i].hidden=!1,$scope.updateNoRefresh())},$scope.updatePlayCnt=function(filename){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)$scope.project.auditions[i].file.name===filename&&(void 0===auditions[i].playCnt?auditions[i].playCnt=1:auditions[i].playCnt+=1);$scope.updateNoRefresh()},$scope.updatePlayCntSingle=function(audition){void 0===audition.playCnt?audition.playCnt=1:audition.playCnt+=1,saveAudition(audition)},$scope.stopAudio=function(){"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop(),$scope.audioStatus=2)},$scope.playAudio=function(key,filename,fileDir){var fileName="";if(fileName=void 0===fileDir?"/res/auditions/"+$scope.project._id+"/"+filename:fileDir+"/"+filename,IS_NOT_MOBILE){if(key!==$scope.lastAudioID&&"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop()),"object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),$scope.audioStatus=1,void $scope.updatePlayCnt(filename);$scope.audio=ngAudio.load(fileName).play(),$scope.loop=0,$scope.audioStatus=1,$scope.updatePlayCnt(filename),$scope.lastAudioID=key}else void 0===$scope.audio.paused||void 0===$scope.audio.filename||$scope.audio.paused&&$scope.audio.currentTime>0&&!$scope.audio.ended?($scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key,$scope.audio.mobile=!0):$scope.audio.filename!==fileName?($scope.audio.pause(),$scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key):($scope.audio.pause(),$scope.audioStatus=0)},$scope.playAudioSingle=function(key,audition,fileDir){var fileName="";if(fileName=void 0===fileDir?"/res/auditions/"+$scope.project._id+"/"+audition.file.name:fileDir+"/"+audition.file.name,IS_NOT_MOBILE){if(key!==$scope.lastAudioID&&"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop()),"object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),$scope.audioStatus=1,void $scope.updatePlayCntSingle(audition);$scope.audio=ngAudio.load(fileName).play(),$scope.loop=0,$scope.audioStatus=1,$scope.updatePlayCntSingle(audition),$scope.lastAudioID=key}else void 0===$scope.audio.paused||void 0===$scope.audio.filename||$scope.audio.paused&&$scope.audio.currentTime>0&&!$scope.audio.ended?($scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key,$scope.audio.mobile=!0):$scope.audio.filename!==fileName?($scope.audio.pause(),$scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key):($scope.audio.pause(),$scope.audioStatus=0)},$scope.updatePred=function(pred){$scope.predicate=pred}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("error",{url:"/404",templateUrl:"modules/core/views/not-found.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$window","$rootScope","$location","Socket",function($scope,Authentication,Menus,$window,$rootScope,$location,Socket){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$rootScope.$on("$viewContentLoaded",function(event){$window.ga("send","pageview",{page:$location.url()})}),$scope.connectionCnt=function(){}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication,void 0===$scope.authentication.user||void 0===$scope.authentication.user.roles||"client"!==$scope.authentication.user.roles[0]&&"client-client"!==$scope.authentication.user.roles[0]||$location.path("/clients/projects")}]),angular.module("core").filter("multiTerm",["$filter",function($filter){return function(inputArray,searchText){for(var wordArray=searchText?searchText.toLowerCase().split(/\s+/):[],wordCount=wordArray.length,i=0;i<wordCount;i++)inputArray=$filter("filter")(inputArray,wordArray[i],!0);return inputArray}}]),angular.module("core").filter("multiTermFull",["$filter",function($filter){return function(inputArray,searchText){for(var wordArray=searchText?searchText.toLowerCase().split(/\s+/):[],wordCount=wordArray.length,i=0;i<wordCount;i++)inputArray=$filter("filter")(inputArray,wordArray[i],!1);return inputArray}}]),angular.module("core").filter("startFrom",function(){return function(input,start){if(input&&input.length)return start=+start,input.slice(start)}}),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1}
;this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||void 0===isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||void 0===roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||void 0===isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||void 0===roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]);var io;angular.module("core").factory("Socket",["socketFactory",function(socketFactory){return socketFactory({prefix:"",ioSocket:io(location.host,{reconnect:!0,transports:["websocket","polling"]})})}]),angular.module("logs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listLogs",{url:"/logs",templateUrl:"modules/logs/views/list-logs.client.view.html"}).state("createLog",{url:"/logs/create",templateUrl:"modules/logs/views/create-log.client.view.html"}).state("viewLog",{url:"/logs/:logId",templateUrl:"modules/logs/views/view-log.client.view.html"}).state("editLog",{url:"/logs/:logId/edit",templateUrl:"modules/logs/views/edit-log.client.view.html"})}]),angular.module("logs").controller("LogsController",["$scope","$stateParams","$location","Authentication","Logs","$http",function($scope,$stateParams,$location,Authentication,Logs,$http){$scope.authentication=Authentication,$scope.logCnt=0,$scope.page=0,$scope.searchText={type:""},$scope.Math=window.Math,$scope.currentPage=0,$scope.filtered=[],$scope.limit=300,$scope.searchString="",$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n,$scope.listTypeFilter(this.n)},$scope.changePage=function(page){var curSel=page*$scope.limit;curSel<$scope.filtered.length&&curSel>=0&&($scope.currentPage=page)},$scope.create=function(){new Logs({name:this.name}).$save(function(response){$location.path("logs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(log){if(log){log.$remove();for(var i in $scope.logs)$scope.logs[i]===log&&$scope.logs.splice(i,1)}else $scope.log.$remove(function(){$location.path("logs")})},$scope.update=function(){var log=$scope.log;log.$update(function(){$location.path("logs/"+log._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.getLogsCount=function(){$http.post("/logs/recCount",{filter:$scope.searchText.type,searchTxt:$scope.searchString}).success(function(data,status,headers,config){$scope.logCnt=Number(data)})},$scope.find=function(){$scope.logs=Logs.query()},$scope.listFilter=function(listFilter){$http.post("/logs/listFilter",{filter:listFilter}).success(function(data,status,headers,config){$scope.logs=data})},$scope.listTypeFilter=function(page,filter){void 0===page?page=$scope.page:$scope.page=page,void 0===filter&&(filter=$scope.searchText.type);var startVal=page*$scope.limit;$http.post("/logs/listTypeFilter",{startVal:startVal,limitVal:$scope.limit,filter:filter,searchTxt:$scope.searchString}).success(function(data,status,headers,config){$scope.logs=[],$scope.logs=data})},$scope.$watchCollection("logs",function(val){$scope.getLogsCount()}),$scope.findOne=function(){$scope.log=Logs.get({logId:$stateParams.logId})}}]),angular.module("logs").factory("Logs",["$resource",function($resource){return $resource("logs/:logId",{logId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Projects","projects","dropdown","/projects(/create)?",!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director"],0),Menus.addSubMenuItem("topbar","projects","New","projects/create",!1,!1,["admin","production coordinator"]),Menus.addSubMenuItem("topbar","projects","Browse","projects",!1,!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director"])}]),angular.module("projects").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listProjects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("createProject",{abstract:!0,url:"/projects/create",controller:"ProjectsController",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("createProject.project",{url:"",parent:"createProject",templateUrl:"modules/projects/views/create-project/project.client.view.html"}).state("createProject.talent",{url:"/talent",parent:"createProject",templateUrl:"modules/projects/views/create-project/talent.client.view.html"}).state("createDupProject",{abstract:!0,url:"/projects/create/:projectId",controller:"ProjectsController",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("createDupProject.project",{url:"",parent:"createDupProject",templateUrl:"modules/projects/views/create-project/project.client.view.html"}).state("createDupProject.talent",{url:"/talent",parent:"createDupProject",templateUrl:"modules/projects/views/create-project/talent.client.view.html"}).state("talentAuditionUploadProject",{url:"/projects/talent-upload/:projectId/:talentId",templateUrl:"modules/projects/views/talent-audition-upload.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$location","Authentication","Projects","$upload","ngAudio","$http","$modal","$rootScope","Socket","$cookies","moment","$window","Talents","IS_NOT_MOBILE",function($scope,$stateParams,$location,Authentication,Projects,$upload,ngAudio,$http,$modal,$rootScope,Socket,$cookies,moment,$window,Talents,IS_NOT_MOBILE){$scope.authentication=Authentication,$scope.projectsTotalCnt=0,$scope.project={},$scope.discussion="",$scope.watchersObj={},$scope.hide=0,$scope.max=5,$scope.isReadonly=!1,$scope.ratings=[],$scope.ratingsAvg=[],$scope.newFileCnt=0,$scope.procCnt=0,$scope.fileCheck=!1,$scope.showDateEdit=!1,$scope.showRename=!1,$scope.addTalent=!0,$scope.newProjTalentLink="createProject.talent",$scope.newProjLink="createProject.project",$scope.clientNotes="",$scope.auditions=[],$scope.projAuditions=[],$scope.projProgress=[],$scope.selCheckVal=0,$scope.client=[],$scope.talent=[],$scope.showRename=[],$scope.statusOpts=["In Progress","On Hold","Booked","Canceled","ReAuditioned","Dead","Closed - Pending Client Decision","Complete"],$scope.priorityOpts=["None","Very low","Low","Medium","High","Very high"],$scope.phaseStatusOpts=["in progress","open","complete","suspended"],$scope.soundersOpts=["Sounders","No Sounders - Approved By William"],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)","Missed","Canceled"],$scope.audio="",$scope.lastAudioID=0,$scope.audioStatus=0,$scope.referenceFiles=[],$scope.scripts=[],$scope.newProject={title:"",estimatedCompletionDate:"",notifyClient:!0,client:[],scripts:[],copiedScripts:[],referenceFiles:[],copiedReferenceFiles:[],talent:[]},$scope.parts=[],$scope.toggleRefs=!1,$scope.selectedMainClients=[],$scope.rejFiles=[],$scope.talentBooked=[],$scope.talentNote=[],$scope.verifyFilesList={},$scope.predicate="",$scope.reverse="",$scope.searchText={},$scope.$on("$destroy",function(event){Socket.removeAllListeners()});var loadAuditions=function(){$http.post("/projects/loadAuditions",{projectId:$stateParams.projectId}).success(function(data,status,headers,config){$scope.projAuditions=data}).error(function(data,status,headers,config){console.log("Problem loading project auditions.")})};$scope.toggleShowRename=function(idx){$scope.showRename[idx]?$scope.showRename[idx]=!$scope.showRename:$scope.showRename[idx]=1},$scope.toggleShowEdit=function(){$scope.showDateEdit=!$scope.showDateEdit},$scope.updatePred=function(pred){$scope.predicate=pred},$scope.Math=window.Math,$scope.currentPage=0,$scope.filtered=[],$scope.limit=20,$scope.queryLimit=50,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n,$scope.findLimitWithFilter()},$scope.changePage=function(page){var curSel=page*$scope.limit;curSel<$scope.projectsTotalCnt&&curSel>=0&&($scope.currentPage=page,$scope.findLimitWithFilter())},$scope.hoveringOver=function(value,key,object){$scope.overStar=value,$scope.percent=value/$scope.max*100,$scope.selCheckVal=value},$scope.createClient=function(owner){$modal.open({animation:!0,templateUrl:"modules/users/views/modal-create.client.view.html",controller:"UsersModalController",resolve:{owner:function(){return"client"===owner?"client":"client-client"}}})},$scope.createTalent=function(){$modal.open({animation:!0,templateUrl:"modules/talents/views/create-talent-modal.client.view.html",controller:"TalentsModalController"}).result.then(function(selectedItem){},function(){})},$scope.selAudition=function(key){var selectedAuditions=$scope.selectedAuditions,idx=selectedAuditions.indexOf(key);idx>-1?selectedAuditions.splice(idx,1):selectedAuditions.push(key)},$scope.selCheck=function(filename){var selectedAuditions=$scope.selectedAuditions,i=0;for(i=0;i<selectedAuditions.length;++i)if(selectedAuditions[i]===filename)return!0},$scope.hideAudition=function(filename){for(var auditions=$scope.project.auditions,limit=auditions.length,i=0;i<limit;++i)auditions[i].file.path===filename&&(auditions[i].hidden=!0,$scope.updateNoRefresh())},$scope.isHidden=function(filename){for(var auditions=$scope.project.auditions,limit=auditions.length,i=0;i<limit;++i)if(auditions[i].file.path===filename)return!0;return!1},$scope.downloadAllAuditions=function(){$http.post("/projects/downloadallauditions",{project:$scope.project}).success(function(data,status,headers,config){setTimeout(function(){window.location.href="res/archives/"+encodeURIComponent(data.zip)},1e3)})},$scope.compareDates=function(projDate){var now=new Date;return projDate=new Date(projDate),Math.abs(projDate-now)/36e5<=1},$scope.compareDatesDay=function(projDate){var oneDay=864e5,now=new Date;projDate=new Date(projDate);var diffDays=Math.round(Math.abs((projDate.getTime()-now.getTime())/oneDay));return Number(diffDays)>=1},$scope.checkPassed=function(projDate){var now=new Date;return projDate=new Date(projDate),now>projDate},$scope.showPartFld=function(id){var talent=$scope.project.talent;if(talent){var limit=talent.length,i=0;for(i=0;i<limit;++i)if(talent[i].talentId===String(id)&&(!0===talent[i].requested||!0===talent[i].regular))return!1}return!0},$scope.showPartString=function(id){var talent=$scope.project.talent;if(talent){var limit=talent.length,i=0;for(i=0;i<limit;++i)if(talent[i].talentId===String(id)&&void 0!==talent[i].part&&""!==talent[i].part)return talent[i].part}},$scope.showCreatePartFld=function(id){var talent=$scope.project.talent;if(talent){var limit=talent.length,i=0;for(i=0;i<limit;++i)if(talent[i].talentId===String(id)&&(!0===talent[i].requested||!0===talent[i].regular))return!1}return!0},$scope.defaults=function(){var allowRoles=["producer/auditions director","auditions director","audio intern"],limitAllow=allowRoles.length,roles=Authentication.user.roles,limit=roles.length,i=0,j=0;for(i=0;i<limit;++i)for(j=0;j<limitAllow;++j)roles[i]===allowRoles[j]&&($scope.searchText.status="In Progress")},$scope.isOwner=function(){var project=$scope.project,authUsr=Authentication.user;if("object"==typeof project.user)return String(project.owner)===String(authUsr._id)||String(project.user._id)===String(authUsr._id)},$scope.permitRoles=function(selRoles){var allowLimit=selRoles.length,roles=Authentication.user.roles,limit=roles.length,i=0,j=0;for(i=0;i<limit;++i)for(j=0;j<allowLimit;++j)if(roles[i]===selRoles[j])return!0},$scope.userCheck=function(){var authRoles=Authentication.user.roles;"admin"!==authRoles[0]&&"producer/auditions director"!==authRoles[0]&&"auditions director"!==authRoles[0]&&"audio intern"!==authRoles[0]&&"production coordinator"!==authRoles[0]&&$location.path("/projects")},$scope.sendTalentEmail=function(talentId){var talents=$scope.project.talent;angular.forEach(talents,function(talent,key){talent.talentId===talentId&&$http.post("/projects/sendtalentemail",{talent:talent,project:$scope.project,override:!0}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$scope.project=data})})},$scope.sendClientEmail=function(type){var selectedMainClients=$scope.selectedMainClients,project=$scope.project,authUser=Authentication.user;selectedMainClients.length>0?(void 0===project.counts&&(project.counts={}),void 0===project.counts[type]&&(project.counts[type]=0),project.counts[type]+=1,$http.post("/projects/sendclientemail",{type:type,project:project,clients:selectedMainClients,count:project.counts[type]}).success(function(data,status,headers,config){alert("Clients sent "+type+" Email "),$scope.selectedMainClients=[];var note,now=Date.now(),item={date:now,userid:"",username:"System",item:"",deleted:!1};switch(type){case"opening":note="Client Notified of Project Start by "+authUser.displayName;break;case"carryover":note="Client sent Carryover by "+authUser.displayName;break;case"closing":note="Client Notified of Project Completion by "+authUser.displayName}item.item=note,project.discussion.push(item),$scope.updateNoRefresh()}).error(function(data,status,headers,config){alert("An error occured while sending client emails. Please contact your administrator.")})):alert("Please select clients to email!")},$scope.gatherToAddresses=function(type){var emailObj={email:{projectId:$scope.project._id,to:[],bcc:[],subject:"",message:""}},project=$scope.project,l=0,limit=project.talent.length;angular.extend($scope,emailObj);var toEmails=[],emailCnt=0,re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;if(toEmails[emailCnt]=Authentication.user.email,"updateTalent"!==type&&"updateTeam"!==type&&"updateClientClient"!==type&&"updateClient"!==type&&"saveAudtionNote"!==type&&"saveScriptNote"!==type&&"saveDiscussion"!==type&&"updateStatus"!==type)for(l=0;l<limit;++l)""!==project.talent[l].email&&re.test(project.talent[l].email)&&(emailCnt+=1,toEmails[emailCnt]=project.talent[l].email);$scope.email.to=toEmails},$scope.checkClientClientUsers=function(userId){var project=$scope.project;if("object"==typeof project.clientClient){var limit=project.clientClient.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.clientClient[i].userId===userId)return!0}},$scope.checkClientUsers=function(userId){var project=$scope.project;if("object"==typeof project.client){var limit=project.client.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.client[i].userId===userId)return!0}},$scope.checkClientUsersCreate=function(userId){var project=$scope.newProject;if("object"==typeof project.client){var limit=project.client.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.client[i].userId===userId)return!0}},$scope.checkTeam=function(userId){var project=$scope.project;if("object"==typeof project.team){var limit=project.team.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.team[i].userId===userId)return!0}},$scope.checkTalent=function(talentId){var project=$scope.project;if("object"==typeof project.talent){var limit=project.talent.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.talent[i].talentId===talentId&&!0===project.talent[i].regular)return!0}},$scope.checkRequestedTalent=function(talentId){var project=$scope.project;if("object"==typeof project.talent){var limit=project.talent.length,i=0;if("object"==typeof project)for(i=0;i<limit;++i)if(project.talent[i].talentId===talentId&&!0===project.talent[i].requested)return!0}},$scope.checkCreateTalent=function(talentId){var project=$scope.newProject;if("object"==typeof project.talent){var limit=project.talent.length,i=0;for(i=0;i<limit;++i)if(project.talent[i].talentId===talentId&&!0===project.talent[i].regular)return!0}},$scope.checkRequestedCreateTalent=function(talentId){var project=$scope.newProject;if("object"==typeof project.talent){var limit=project.talent.length,i=0;for(i=0;i<limit;++i)if(project.talent[i].talentId===talentId&&!0===project.talent[i].requested)return!0}},$scope.updateTalent=function(talentId,talentName,email,locationISDN,nameLnmCode){var log,found=0,i=0,talents=$scope.project.talent,limit=talents.length,talent={talentId:talentId,name:talentName,nameLnmCode:talentName,locationISDN:locationISDN,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!0,requested:!1,added:moment().tz("America/New_York").format()};for($scope.addTalent=!1,i=0;i<limit;++i)if(talents[i].talentId===talentId){if(!0===talents[i].requested&&(talents[i].requested=!1),!0===talents[i].regular?talents[i].regular=!1:talents[i].regular=!0,!1===talents[i].regular&&!1===talents[i].requested)return log={type:"talent",sharedKey:talents[i].talentId,description:"talent "+talents[i].name+" removed from  "+$scope.project.title},$scope.project.log=log,$scope.project.talent.splice(i,1),$scope.updateNoRefresh(),void($scope.addTalent=!0);found=1}0===found&&(talents.push(talent),log={type:"talent",sharedKey:talent.talentId,description:"talent "+talent.name+" added to project  "+$scope.project.title},$scope.project.log=log,$http.post("/projects/sendTalentDirectorsEmail",{talent:talent,projectId:$scope.project._id})),$http.post("/projects/sendTalentEmail",{talent:talent,project:$scope.project}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data),$scope.addTalent=!0})},$scope.updateRequestTalent=function(talentId,talentName,email,locationISDN,nameLnmCode){var log,found=0,i=0,talents=$scope.project.talent,limit=talents.length,talent={talentId:talentId,name:talentName,nameLnmCode:talentName,locationISDN:locationISDN,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!1,requested:!0,added:moment().tz("America/New_York").format()};for($scope.addTalent=!1,i=0;i<limit;++i)if(talents[i].talentId===talentId){if(!0===talents[i].regular&&(talents[i].regular=!1),!0===talents[i].requested?talents[i].requested=!1:talents[i].requested=!0,!1===talents[i].regular&&!1===talents[i].requested)return log={type:"talent",sharedKey:talents[i].talentId,description:"REQUESTED talent "+talents[i].name+" removed from  "+$scope.project.title},$scope.project.log=log,$scope.project.talent.splice(i,1),$scope.updateNoRefresh(),void($scope.addTalent=!0);found=1}0===found&&(talents.push(talent),log={type:"talent",sharedKey:talent.talentId,description:"REQUESTED talent "+talent.name+" added to project  "+$scope.project.title},$scope.project.log=log),$http.post("/projects/sendTalentEmail",{talent:talent,project:$scope.project}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data),$scope.addTalent=!0})},$scope.updateCreateTalent=function(talentId,talentName,email){var found=0,i=0,talents=$scope.newProject.talent,limit=talents.length,talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!0,requested:!1,added:moment().tz("America/New_York").format()};for(i=0;i<limit;++i)talents[i].talentId===talentId&&(!0===talents[i].requested&&(talents[i].requested=!1),!0===talents[i].regular?talents[i].regular=!1:talents[i].regular=!0,!1===talents[i].regular&&!1===talents[i].requested&&talents.splice(i,1),found=1);0===found&&talents.push(talent)},$scope.updateRequestCreateTalent=function(talentId,talentName,email){var found=0,i=0,talents=$scope.newProject.talent,limit=talents.length,talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!1,requested:!0,added:moment().tz("America/New_York").format()};for(i=0;i<limit;++i)talents[i].talentId===talentId&&(!0===talents[i].regular&&(talents[i].regular=!1),!0===talents[i].requested?talents[i].requested=!1:talents[i].requested=!0,!1===talents[i].regular&&!1===talents[i].requested&&talents.splice(i,1),found=1);0===found&&talents.push(talent)},$scope.updateTalentStatus=function(talentId,status){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)if(String(talents[i].talentId)===String(talentId)){talents[i].status=status;var log={type:"talent",sharedKey:talents[i].talentId,description:"talent "+talents[i].name+" status updated to "+talents[i].status};$scope.project.log=log,$scope.updateNoRefresh()}},$scope.getTalentStatus=function(talentId){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)if(String(talents[i].talentId)===String(talentId))return talents[i].status},$scope.updateClientClient=function(userId,displayName,email){var clientClients=$scope.project.clientClient,limit=clientClients.length,i=0,found=0,user={userId:userId,name:displayName,email:email};for(i=0;i<limit;++i)clientClients[i].userId===userId&&(clientClients.splice(i,1),found=1);0===found&&clientClients.push(user),$scope.updateNoRefresh()},$scope.updateClient=function(userId,displayName,email){var clients=$scope.project.client,limit=clients.length,i=0,found=0,user={userId:userId,name:displayName,email:email};for(i=0;i<limit;++i)clients[i].userId===userId&&(clients.splice(i,1),found=1);0===found&&clients.push(user),$scope.updateNoRefresh()},$scope.updateCreateClient=function(userId,displayName,email){var clients=$scope.newProject.client,limit=clients.length,i=0,found=0,user={userId:userId,name:displayName,email:email};for(i=0;i<limit;++i)clients[i].userId===userId&&(clients.splice(i,1),found=1);0===found&&clients.push(user)},$scope.toggleBooked=function(talentId){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)if(talents[i].talentId===talentId){talents[i].booked=!talents[i].booked;var log={type:"talent",sharedKey:talents[i].talentId,description:"talent "+talents[i].name+" booked status set to "+talents[i].booked};$scope.project.log=log,$scope.updateNoRefresh()}},$scope.getBooked=function(talentId){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)if(talents[i].talentId===talentId&&!0===talents[i].booked)return!0},$scope.getTalentNote=function(talentId){var talents=$scope.project.talent,limit=talents.length,i=0;if(void 0!==$scope.project&&void 0!==talents)for(i=0;i<limit;++i)if(talents[i].talentId===talentId)return talents[i].note},$scope.saveTalentNote=function(talentId){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)talents[i].talentId===talentId&&(talents[i].note=$scope.talentNote[talentId],$scope.updateNoRefresh())},$scope.create=function(){var proStatus="In Progress",id="",newProject=$scope.newProject;void 0!==newProject._id&&(id=newProject._id,proStatus="ReAuditioned"),new Projects({id:id,title:newProject.title,estimatedCompletionDate:newProject.estimatedCompletionDate,estimatedTime:newProject.estimatedTime,actualTime:newProject.actualTime,status:proStatus,sounders:newProject.sounders,scripts:newProject.scripts,copiedScripts:newProject.copiedScripts,referenceFiles:newProject.referenceFiles,copiedReferenceFiles:newProject.copiedReferenceFiles,description:newProject.description,client:newProject.client,talent:newProject.talent,notifyClient:newProject.notifyClient}).$save(function(response){$location.path("projects/"+response._id),$scope.name="",$scope.newProject=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(project){if(confirm("Are you sure?"))if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(redirect){var project=$scope.project;redirect=void 0===redirect||redirect,project.$update(function(){!0===redirect&&$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.updateNoRefresh=function(){$http.post("/projects/updateNoRefresh",{project:$scope.project}).success(function(data,status,headers,config){data&&($scope.project=angular.extend($scope.project,data)),jQuery("section.content").animate({backgroundColor:"#ddd"},{duration:500,complete:function(){jQuery("section.content").animate({backgroundColor:"transparent"},{duration:500})}}),$scope.processing=!1}).error(function(data,status,headers,config){$scope.processing=!1,jQuery("section.content").animate({backgroundColor:"#ddd"},{duration:500,complete:function(){jQuery("section.content").animate({backgroundColor:"transparent"},{duration:500})}}),console.log("Problem loading project. "+JSON.stringify(data))})},$scope.dupCheck=function(){$stateParams.projectId&&($http.get("/projects/"+$stateParams.projectId,{}).success(function(data,status,headers,config){$scope.newProject=data,$scope.newProject.title=$scope.newProject.title+" ReAudition",$scope.newProject.talent=[],$scope.newProject.copiedScripts=$scope.newProject.scripts,$scope.newProject.scripts=[],$scope.newProject.copiedReferenceFiles=$scope.newProject.referenceFiles,$scope.newProject.referenceFiles=[],$scope.newProject.estimatedCompletionDate=""}),$scope.newProjTalentLink="createDupProject.talent",$scope.newProjLink="createDupProject.project")},$scope.updateRating=function(path,redirect){var auditions=$scope.project.auditions,limit=auditions.length,j=0,i=0,rateLimit=0;redirect=void 0===redirect||redirect;var key,ratingCnt=0,avgRating=0;for(j=0;j<limit;++j)auditions[j].file.path===path&&(key=j);if(void 0!==auditions[key]&&void 0!==auditions[key].rating){for(rateLimit=auditions[key].rating.length,i=0;i<rateLimit;++i)auditions[key].rating[i].userId===Authentication.user._id?(auditions[key].rating.splice(i,1),auditions[key].curRating=$scope.selCheckVal):avgRating+=auditions[key].rating[i].value;ratingCnt+=auditions[key].rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};auditions[key].rating.push(rating),auditions[key].avgRating=avgRating,$scope.updateNoRefresh()},$scope.updateStatus=function(key){var discussion,item,project=$scope.project,i=0,clientLimit=0,newDate=moment(new Date).format("MM/DD/YYYY h:mm a");if(project.phases[key].changeDate=newDate,"Posting and Publishing"===String(project.phases[key].name)&&("Holding for more talent"===String(project.phases[key].status)||"Holding For Requested Talent"===String(project.phases[key].status)?($scope.gatherToAddresses("updateStatus"),$scope.email.subject=project.title+" Phase "+project.phases[key].name+" Status Update",$scope.email.message+="Project: "+project.title+"<br>",$scope.email.message+="Phase: "+project.phases[key].name+"<br>",$scope.email.message+="Status: "+project.phases[key].status+"<br>",$scope.email.message+="Start Date: "+(project.phases[key].startDate||"")+"<br>",$scope.email.message+="Change Date: "+(project.phases[key].changeDate||"")+"<br><br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),discussion="Project phase "+project.phases[key].name+" status changed to "+project.phases[key].status+" on "+newDate+" EST by "+Authentication.user.displayName,item={date:newDate,userid:"",username:"System",item:discussion,deleted:!1},project.discussion.push(item)):"Waiting For Clients to Be Added"===String(project.phases[key].status)&&($scope.gatherToAddresses("updateStatus"),$scope.email.subject="Please add Clients to "+project.title,$scope.email.message+="Project: "+project.title+"<br>",$scope.email.message+="Phase: "+project.phases[key].name+"<br>",$scope.email.message+="Status: "+project.phases[key].status+"<br>",$scope.email.message+="Start Date: "+(project.phases[key].startDate||"")+"<br>",$scope.email.message+="Change Date: "+(project.phases[key].changeDate||"")+"<br><br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),discussion="Project phase "+project.phases[key].name+" status changed to "+project.phases[key].status+" on "+newDate+" EST by "+Authentication.user.displayName,item={date:newDate,userid:"",username:"System",item:discussion,deleted:!1},project.discussion.push(item))),"complete"===project.phases[key].status){var now=new Date;if(project.phases[key].endDate=now.toJSON(),"Posting and Publishing"===project.phases[key].name){for(project.status="Closed - Pending Client Decision",clientLimit=project.client.length,i=0;i<clientLimit;++i)$scope.selectedMainClients[i]=project.client[i].userId;$scope.sendClientEmail("closing")}}$scope.updateNoRefresh()},$scope.updateSoundersStatus=function(){var now=new Date,project=$scope.project,item={date:now,userid:"",username:"System",item:"Changed to "+project.sounders+" by "+Authentication.user.displayName,deleted:!1};project.discussion.push(item),$scope.updateNoRefresh()},$scope.updateProjectStatus=function(){var now=new Date,project=$scope.project,item={date:now,userid:"",username:"System",item:"Changed to "+project.status+" by "+Authentication.user.displayName,deleted:!1};project.discussion.push(item),$scope.updateNoRefresh(),
"Canceled"===project.status&&$http.post("/projects/sendTalentCanceledEmail",{talents:project.talent,projectId:project._id,override:!1}).success(function(data,status,headers,config){project=angular.extend(project,data),$scope.update()})},$scope.getFilterVars=function(){var filterObj={};return $scope.searchText.title&&(filterObj.title=$scope.searchText.title),$scope.searchText.description&&(filterObj.description=$scope.searchText.description),$scope.sortText?filterObj.sortOrder=$scope.sortText:filterObj.sortOrder="created",$scope.sortTextOrder?filterObj.ascDesc=$scope.sortTextOrder:filterObj.ascDesc="desc",$scope.searchText.user?filterObj.myProjects=!0:filterObj.myProjects=!1,$scope.searchText.status&&(filterObj.status="In Progress"),$scope.searchText.clientEmail&&(filterObj.clientEmail=$scope.searchText.clientEmail),filterObj},$scope.getProjectsCnt=function(){var filterObj=$scope.getFilterVars();$http.post("/projects/getProjectsCnt",{filter:filterObj}).success(function(data,status,headers,config){$scope.projectsTotalCnt=data})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findLimit=function(){$http.post("/projects/findLimit",{queryLimit:$scope.queryLimit}).success(function(data,status,headers,config){$scope.projects=[],$scope.projects=data,$scope.getProjectsCnt()})},$scope.findLimitWithFilter=function(){var startVal=$scope.currentPage*$scope.limit,filterObj=$scope.getFilterVars();$http.post("/projects/findLimitWithFilter",{startVal:startVal,limitVal:$scope.limit,filter:filterObj}).success(function(data,status,headers,config){$scope.projects=[],$scope.projects=data,$scope.getProjectsCnt()}).error(function(data,status,headers,config){console.log(status),console.log(data)})},$scope.updateLimit=function(limit){$scope.queryLimit=limit,$scope.findLimit()},Socket.on("projectsListUpdate",function(){$scope.findLimitWithFilter()}),$scope.findOneById=function(id){$scope.selectedAuditions=[],$scope.hideList=[],$stateParams.projectId=id,$scope.findOne(),$scope.curRatings()},Socket.on("projectUpdate",function(pojectData){var project=$scope.project;String(pojectData.id)===String(project._id)&&$http.post("/projects/getproject",{id:project._id}).success(function(data,status,headers,config){project=angular.extend(project,data),jQuery("section.content").animate({backgroundColor:"#ddd"},{duration:500,complete:function(){jQuery("section.content").animate({backgroundColor:"transparent"},{duration:500})}})})}),Socket.on("auditionUpdate",function(pojectID){var project=$scope.project;String(pojectID.id)===String(project._id)&&loadAuditions()}),$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$rootScope.$on("refreshProject",function(event,args){$scope.findOneById(args)}),$scope.loadProject=function(){$http.post("/projects/loadProject",{projectId:$stateParams.projectId}).success(function(data,status,headers,config){$scope.project=new Projects,$scope.project=angular.extend($scope.project,data),jQuery("section.content").animate({backgroundColor:"#ddd"},{duration:500,complete:function(){jQuery("section.content").animate({backgroundColor:"transparent"},{duration:500})}})}).error(function(data,status,headers,config){console.log("Problem loading project.")}),loadAuditions()},"object"!=typeof $scope.watchersObj.procCnt&&($scope.watchersObj.procCnt=$scope.$watchCollection("procCnt",function(){$scope.procCnt>0&&$scope.newFileCnt>0&&$scope.procCnt===$scope.newFileCnt&&($scope.updateNoRefresh(),$scope.newFileCnt=0,$scope.procCnt=0)})),"object"!=typeof $scope.watchersObj["newProject.estimatedCompletionDate"]&&$scope.$watchCollection("newProject.estimatedCompletionDate",function(val){var now=new Date;""!==$scope.newProject.estimatedCompletionDate&&$scope.newProject.estimatedCompletionDate<now?$scope.dateNotice="Date selected passed. Please select a future date and time!":$scope.dateNotice=""}),$scope.calcProjectProg=function(curProject){if(void 0!==curProject.phases){var phaseLngth=curProject.phases.length,complSteps=0,i=0;for(i=0;i<phaseLngth;++i)"complete"===curProject.phases[i].status&&complSteps++;return Math.floor(100/phaseLngth*complSteps)}},$scope.checkFileWalk=function(emitStatus){var auditions=$scope.project.auditions;if(auditions){var fn,file,limit=auditions.length,project=$scope.project;angular.forEach(auditions,function(value,key){void 0!==value.filecheck&&0!==value.filecheck||($scope.newFileCnt+=1,fn=value.file.name,file="/res/auditions/"+project._id+"/"+fn,$http.post("/projects/fileExists",{file:file}).success(function(data,status,headers,config){auditions[key].filecheck=1,auditions[key].filecheckdate=new Date,$scope.procCnt+=1}).error(function(data,status,headers,config){auditions[key].filecheck=2,auditions[key].filecheckdate=new Date,$scope.procCnt+=1})),key===limit-1&&($scope.fileCheck=!0,void 0===emitStatus&&1!==emitStatus||alert("File check complete."))})}},$scope.checkAllFiles=function(){var auditions=$scope.project.auditions,limit=auditions.length,i=0;for(i=0;i<limit;++i)auditions[i].filecheck=0,i+1===limit&&$scope.checkFileWalk(1)},"object"!=typeof $scope.watchersObj.project&&($scope.watchersObj.project=$scope.$watchCollection("project",function(val){"object"==typeof $scope.project&&("object"!=typeof $scope.watchersObj.project.auditions&&($scope.watchersObj.project.auditions=$scope.$watchCollection("project.auditions",function(){!1===$scope.fileCheck&&$scope.checkFileWalk()})),"object"!=typeof $scope.watchersObj.project.referenceFiles&&($scope.watchersObj.project.referenceFiles=$scope.$watchCollection("project.referenceFiles",function(){"object"==typeof $scope.project.referenceFiles&&$scope.project.referenceFiles.length>0&&($scope.toggleRefs=!0)})),"object"!=typeof $scope.watchersObj.project.phases&&($scope.watchersObj.project.phases=$scope.$watchCollection("project.phases",function(val){if(void 0!==$scope.project.phases){for(var phaseLngth=$scope.project.phases.length,complSteps=0,i=0;i<phaseLngth;++i)"complete"===$scope.project.phases[i].status&&complSteps++;var perc=Math.floor(100/phaseLngth*complSteps);$scope.dynamic=perc}})))})),$scope.verifyAudio=function(key){var auditions=$scope.project.auditions;return"object"==typeof auditions[key]&&"object"==typeof auditions[key].file},$scope.checkForAudio=function(file){if("mp3"===/(\w{3})$/i.exec(file)[1].toLowerCase())return!0},$scope.verifyFile=function(file){void 0===$scope.verifyFilesList[file]&&("scanning"===$scope.verifyFilesList[file]&&!0===$scope.verifyFilesList[file]&&!1===$scope.verifyFilesList[file]||($scope.verifyFilesList[file]="scanning",$http.post("/projects/fileExists",{file:file}).success(function(data,status,headers,config){return $scope.verifyFilesList[file]=!0,!0}).error(function(data,status,headers,config){return $scope.verifyFilesList[file]=!1,!1})))},$scope.stopAudio=function(){var audio=$scope.audio;"object"==typeof audio&&(audio.unbind(),audio.stop(),$scope.audioStatus=2)},$scope.playAudioNoTrack=function(key,filename,fileDir){var fileName="";if(fileName=void 0===fileDir?"/res/auditions/"+$scope.project._id+"/"+filename:fileDir+"/"+filename,IS_NOT_MOBILE){if(key!==$scope.lastAudioID&&"object"==typeof $scope.audio&&($scope.audio.unbind(),$scope.audio.stop()),"object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),void($scope.audioStatus=1);$scope.audio=ngAudio.load(fileName).play(),$scope.loop=0,$scope.audioStatus=1,$scope.lastAudioID=key}else void 0===$scope.audio.paused||void 0===$scope.audio.filename||$scope.audio.paused&&$scope.audio.currentTime>0&&!$scope.audio.ended?($scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key,$scope.audio.mobile=!0):$scope.audio.filename!==fileName?($scope.audio.pause(),$scope.audio=new Audio(fileName),$scope.audio.play(),$scope.audio.filename=fileName,$scope.audioStatus=1,$scope.lastAudioID=key):($scope.audio.pause(),$scope.audioStatus=0)},$scope.updateDueDate=function(){var project=$scope.project,newDate=moment(new Date(project.estimatedCompletionDate)).format("MM/DD/YYYY h:mm a"),newNewDate=moment(new Date).format("MM/DD/YYYY h:mm a");project.estimatedCompletionDate=newDate;var discussion="Due date and time extended to "+newDate+" EST by "+Authentication.user.displayName,item={date:newNewDate,userid:"",username:"System",item:discussion,deleted:!1};if(project.discussion.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=project.title+" - Audition Due Date and Time Extended",$scope.email.message="Project: "+project.title+"<br>",$scope.email.message+="Added by: System<br>",$scope.email.message+="Discussion Item: "+discussion+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),"Closed - Pending Client Decision"===String(project.status)){var limit=project.phases.length,i=0;for(i=0;i<limit;++i)"Posting and Publishing"===project.phases[i].name&&(project.phases[i].status="in progress",project.phases[i].endDate="")}project.status="In Progress",project.preClose=!1,$scope.updateNoRefresh(),$scope.showDateEdit=!1},$scope.saveDiscussion=function(){var project=$scope.project,authUser=Authentication.user;if(void 0!==$scope.discussion&&""!==this.discussion){var now=new Date,item={date:now.toJSON(),userid:authUser._id,username:authUser.displayName,item:$scope.discussion||this.discussion,deleted:!1};project.discussion.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=project.title+" discussion added",$scope.email.message="Project: "+project.title+"<br>",$scope.email.message+="Added by: "+authUser.displayName+"<br>",$scope.email.message+="Discussion Item: "+this.discussion+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$scope.discussion="",this.discussion="",$http.post("/projects/sendemail",{email:$scope.email}),$scope.updateNoRefresh()}},$scope.deleteDiscussion=function(key){var project=$scope.project,selVal=project.discussion.length-1-key;project.discussion[selVal].deleted=!0,$scope.updateNoRefresh()},$scope.updateTalentAssignedStatus=function(selTalent){var talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)talents[i].talentId===selTalent&&"Posted"!==talents[i].status&&(talents[i].status="Posted"),limit===i+1&&$scope.updateNoRefresh()},$scope.delScript=function(idx){var project=$scope.project;if(confirm("Are you sure?")){var file="/res/scripts/"+project._id+"/"+project.scripts[idx].file.name;$http.put("/projects/deletefile",{fileLocation:file,projectId:project._id}),project.scripts.splice(idx,1),$scope.updateNoRefresh()}},$scope.delTempScript=function(idx){var project=$scope.newProject,file=project.scripts[idx].file.name;$http.post("/projects/deleteTempScript",{fileLocation:file}).success(function(data,status,headers,config){project.scripts.splice(idx,1)})},$scope.delCopyScript=function(idx){$scope.newProject.copiedScripts.splice(idx,1)};var performScriptUpload=function(file,i,$files){var project=$scope.project;$scope.upload=$upload.upload({url:"projects/uploads/script",data:{projectId:project._id},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){if(project.scripts.push(data),i+1===$files.length){var now=Date.now(),note="New scripts uploaded, talent notifed",item={date:now,userid:"",username:"System",item:note,deleted:!1};$scope.project.discussion.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=project.title+" - "+note,$scope.email.message="Project: "+project.title+"<br>",$scope.email.message+="Added by: System<br>",$scope.email.message+="Discussion Item: "+note+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),$scope.updateNoRefresh(),$http.post("/projects/sendTalentScriptUpdateEmail",{projectId:project._id,talents:project.talent,chgMade:"Script"})}})};$scope.uploadScript=function($files){angular.forEach($files,function(file,key){performScriptUpload(file,key,$files)})};var performUploadTempScript=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/script/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.newProject.scripts.push(data[0])})};$scope.uploadTempScript=function($files){angular.forEach($files,function(file,key){performUploadTempScript(file,key,$files)})},$scope.updatePublished=function(key){$scope.updateNoRefresh()};var saveAudition=function(audition){$http.post("/projects/saveAudition",{audition:audition}).success(function(data,status,headers,config){loadAuditions()}).error(function(data,status,headers,config){console.log("Problem saving audition.")})};$scope.updateTalentAssignedStatusSingle=function(audition){var selTalent=audition.talent,talents=$scope.project.talent,limit=talents.length,i=0;for(i=0;i<limit;++i)talents[i].talentId===selTalent&&"Posted"!==talents[i].status&&(talents[i].status="Posted"),limit===i+1&&(saveAudition(audition),$scope.updateNoRefresh())},$scope.renameSingle=function(audition){saveAudition(audition)},$scope.updatePublishedSingle=function(audition){saveAudition(audition)},$scope.delAuditionSingle=function(audition){confirm("Are you sure?")&&$http.post("/projects/deleteAudition",{audition:audition}).success(function(data,status,headers,config){loadAuditions()}).error(function(data,status,headers,config){console.log("Problem deleting audition.")})},$scope.updateRatingSingle=function(audition,redirect){var i=($scope.project.auditions,0),rateLimit=0;redirect=void 0===redirect||redirect;var ratingCnt=0,avgRating=0;if(void 0!==audition.rating){for(rateLimit=audition.rating.length,i=0;i<rateLimit;++i)audition.rating[i].userId===Authentication.user._id?(audition.rating.splice(i,1),audition.curRating=$scope.selCheckVal):avgRating+=audition.rating[i].value;ratingCnt+=audition.rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};audition.rating.push(rating),audition.avgRating=avgRating,saveAudition(audition)};var performUploadReferenceFile=function(file,i,$files){var project=$scope.project;$scope.upload=$upload.upload({url:"projects/uploads/referenceFile",data:{projectId:project._id},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){if(project.referenceFiles.push(data),i+1===$files.length){$http.post("/projects/sendTalentScriptUpdateEmail",{projectId:project._id,talents:project.talent,chgMade:"Reference"});var now=Date.now(),note="New reference files uploaded, talent notifed",item={date:now,userid:"",username:"System",item:note,deleted:!1};project.discussion.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=project.title+" - "+note,$scope.email.message="Project: "+project.title+"<br>",$scope.email.message+="Added by: System<br>",$scope.email.message+="Discussion Item: "+note+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()||443!==$location.port()?":"+$location.port():"")+"/#!/projects/"+project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),$scope.updateNoRefresh()}})};$scope.uploadReferenceFile=function($files){angular.forEach($files,function(file,key){performUploadReferenceFile(file,key,$files)})};var performUploadTempReferenceFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/referenceFile/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.newProject.referenceFiles.push(data[0])})};$scope.uploadTempReferenceFile=function($files){angular.forEach($files,function(file,key){performUploadTempReferenceFile(file,key,$files)})},$scope.delTempReferenceFile=function(idx){var file="/res/referenceFiles/temp/"+$scope.newProject.referenceFiles[idx].file.name,project=$scope.project;$http.post("/projects/deletefile",{fileLocation:file,projectId:project._id}).success(function(data,status,headers,config){}),$scope.newProject.referenceFiles.splice(idx,1)},$scope.delCopyReferenceFile=function(idx){$scope.newProject.copiedReferenceFiles.splice(idx,1)},$scope.delReferenceFile=function(idx){var project=$scope.project;if(confirm("Are you sure?")){$scope.processing=!0;var file="/res/referenceFiles/"+project._id+"/"+project.referenceFiles[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file,projectId:project._id}).success(function(data,status,headers,config){project.referenceFiles.splice(idx,1),$scope.updateNoRefresh()})}},$scope.delAudition=function(idx){var project=$scope.project;if(confirm("Are you sure?"))if($scope.processing=!0,void 0!==project.auditions[idx].file){var file="/res/auditions/"+project._id+"/"+project.auditions[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file,projectId:project._id}).success(function(data,status,headers,config){project.auditions.splice(idx,1),$scope.updateNoRefresh()})}else project.auditions.splice(idx,1),$scope.updateNoRefresh()},$scope.newAudUpload="",$scope.audFiles=[],$scope.uploadedAuds=[],$scope.uploadAudsCnt=0,$scope.audUpComp=0,"object"!=typeof $scope.watchersObj.newAudUpload&&$scope.$watchCollection("newAudUpload",function(){var i=$scope.uploadedAuds.length;$scope.uploadedAuds[i]=$scope.newAudUpload,void 0!==$scope.project.talent&&$scope.project.talent.length>0?angular.forEach($scope.project.talent,function(talent,key){talent.talentId===$scope.newAudUpload.talent&&($scope.project.talent[key].status="Posted"),$scope.project.talent.length===key+1&&$scope.uploadAudsCnt===$scope.uploadedAuds.length&&($scope.verifyFilesList=[],$scope.updateNoRefresh(),loadAuditions(),$scope.fileCheck=!1)}):$scope.uploadAudsCnt===$scope.uploadedAuds.length&&($scope.verifyFilesList=[],$scope.updateNoRefresh(),loadAuditions(),$scope.fileCheck=!1)});var performUploadAudition=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/audition",data:{projectId:$scope.project._id},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name}).success(function(data,status,headers,config){$scope.newAudUpload=data,$scope.audUpComp+=1,$scope.uploadprogress=parseInt(100/($files.length-($scope.audUpComp-1)))})};$scope.uploadAudition=function($files){$scope.uploadAudsCnt=0,void 0!==$files&&$files.length>0&&($scope.audUpComp=0,$scope.uploadAudsCnt=$files.length,$scope.uploadedAuds=[],$scope.audFiles=$files,$scope.processing=!0,angular.forEach($files,function(file,key){performUploadAudition(file,key,$files)}))};var performUploadTempAuditionFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/audition/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+1+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.auditions.push(data)})};$scope.uploadTempAudition=function($files){angular.forEach($files,function(file,key){performUploadTempAuditionFile(file,key,$files)})},$scope.delTempAudition=function(key){var auditions=$scope.auditions,project=$scope.project,file="/res/auditions/temp/"+auditions[key].file.name;$http.post("/projects/deletefile",{fileLocation:file,projectId:project._id}),auditions.splice(key,1)},$scope.submitTalentAuditions=function(){!0===confirm("Are you sure?")&&$http.post("/projects/uploads/talentAuditions",{auditions:$scope.auditions,project:$scope.project,talent:$stateParams.talentId}).success(function(data,status,headers,config){$scope.auditions=[],alert("Auditions have been submitted. Thank you!")})},$scope.talentSubmissionsModal=function(talent){$modal.open({animation:!0,templateUrl:"modules/projects/views/talent-submissions-modal.client.view.html",controller:"ProjectsModalController",resolve:{data:function(){return{talent:talent,projectId:$scope.project._id}}}}).result.then(function(selectedItem){},function(){})}}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("reports").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Reports","reports","dropdown","/reports(/create)?",!1,["admin","producer/auditions director","auditions director","audio intern","talent director"],2),Menus.addSubMenuItem("topbar","reports","Missing Auditions","reports/missing-auditions"),Menus.addSubMenuItem("topbar","reports","Assigned Producer Report","reports/assigned-producer"),Menus.addSubMenuItem("topbar","reports","Auditions Booked","reports/auditions-booked"),Menus.addSubMenuItem("topbar","reports","New Project Submissions","tools/list-newprojects"),Menus.addSubMenuItem("topbar","reports","Auditions Per Producer","reports/auds-per-producer"),Menus.addSubMenuItem("topbar","reports","Server Stats","reports/server-stats")}]),angular.module("reports").config(["$stateProvider",function($stateProvider){$stateProvider.state("listReports",{url:"/reports",templateUrl:"modules/reports/views/list-reports.client.view.html"}).state("missingAuditionsReports",{url:"/reports/missing-auditions",templateUrl:"modules/reports/views/missing-auditions-reports.client.view.html"}).state("missingAuditionsBooked",{url:"/reports/auditions-booked",templateUrl:"modules/reports/views/auditions-booked.client.view.html"}).state("serverStats",{url:"/reports/server-stats",templateUrl:"modules/reports/views/server-stats.client.view.html"}).state("audsPerProducer",{url:"/reports/auds-per-producer",templateUrl:"modules/reports/views/auds-per-producer.client.view.html"}).state("assignedProducer",{url:"/reports/assigned-producer",templateUrl:"modules/reports/views/assigned-producer.client.view.html"}).state("isdnSourceConnectList",{url:"/reports/isdn-source-connect-list",templateUrl:"modules/reports/views/isdn-source-connect-list.client.view.html"})}]),angular.module("reports").controller("ReportsController",["$scope","$stateParams","$location","Authentication","Reports","$http",function($scope,$stateParams,$location,Authentication,Reports,$http){$scope.authentication=Authentication,$scope.dateFilter="",$scope.sysstats={},$scope.intervalID="",$scope.findMissingAuditions=function(){$http.post("/reports/findMissingAuds",{dateFilter:$scope.dateFilter}).success(function(data,status,headers,config){$scope.missingAuditions=data})},$scope.findAuditionsBooked=function(){$scope.dateFilterStart&&$scope.dateFilterEnd?$http.post("/reports/findAuditionsBooked",{dateFilterStart:$scope.dateFilterStart,dateFilterEnd:$scope.dateFilterEnd}).success(function(data,status,headers,config){$scope.results=data}):alert("Please select a start and end date!")},$scope.convertToCSV=function(localDoc){$scope.dateFilterStart&&$scope.dateFilterEnd&&$http.post("/reports/convertToCSV",{jsonDoc:localDoc}).success(function(data,status,headers,config){var a=document.createElement("a");a.href="data:attachment/csv,"+escape(data),a.target="_blank",a.download="Auditions-Booked.csv",document.body.appendChild(a),a.click()})},$scope.systemInfo=function(){$http.post("/reports/systemStats",{}).success(function(data,status,headers,config){$scope.sysstats=data})},$scope.findAudsPerProducer=function(){$http.post("/reports/findAudsPerProducer",{dateFilterStart:$scope.dateFilterStart,dateFilterEnd:$scope.dateFilterEnd}).success(function(data,status,headers,config){$scope.audsPerProducer=data})}}]),angular.module("reports").factory("Reports",["$resource",function($resource){return $resource("reports/:reportId",{reportId:"@_id"},{update:{method:"PUT"}})}]),angular.module("talents").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Talent","talents","dropdown","/talents(/create)?",!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director"],3),Menus.addSubMenuItem("topbar","talents","Browse","talents",!1,!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director"]),Menus.addSubMenuItem("topbar","talents","New","talents/create",!1,!1,["admin","talent director","producer/auditions director","auditions director","audio intern","production coordinator"])}]),angular.module("talents").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTalents",{url:"/talents",templateUrl:"modules/talents/views/list-talents.client.view.html"}).state("createTalent",{url:"/talents/create",templateUrl:"modules/talents/views/create-talent.client.view.html"}).state("viewTalent",{url:"/talents/:talentId",templateUrl:"modules/talents/views/view-talent.client.view.html"}).state("editTalent",{url:"/talents/:talentId/edit",templateUrl:"modules/talents/views/edit-talent.client.view.html"})}]),angular.module("talents").controller("TalentsModalController",["$scope","$stateParams","$location","Authentication","Talents","$http","$modalInstance","$rootScope",function($scope,$stateParams,$location,Authentication,Talents,$http,$modalInstance,$rootScope){$scope.authentication=Authentication,$scope.typeOptions=["Email","Phone"],$scope.unionOptions=["union","non-union"],$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.exclusivityOpts=["Non-Union Exclusive","Union","Non-Union Exclusive and Union","Foreign Language Agreement Non-Union","Foreign Language Agreement Union","Foreign Language Agreement Non-Union and Union","ISDN Non-Union","ISDN Union","ISDN Non-Union and Union","Independent Contractor Agreement Non-Union","Independent Contractor Agreement Union","Independent Contractor Agreement Non-Union and Union"],$scope.unionJoinedOpts=["SAG/AFTRA","OTHER"],$scope.unionSelected=[],$scope.unionJoinSelected=[],$scope.prefLangOpts=["English","Spanish"],$scope.typeSelected="Email",$scope.selTypecasts=[],$scope.prefLanguage="English",$scope.projectTalentIdx=[],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.archived=!1,$scope.toggleUnion=function(union){var idx=$scope.talent.unionStatus.indexOf(union);idx>-1?$scope.talent.unionStatus.splice(idx,1):$scope.talent.unionStatus.push(union)},$scope.toggleUnionJoin=function(union){var idx=$scope.talent.unionJoined.indexOf(union);idx>-1?$scope.talent.unionJoined.splice(idx,1):$scope.talent.unionJoined.push(union)},$scope.toggleType=function(type){var idx=$scope.talent.type.indexOf(type);idx>-1?$scope.talent.type.splice(idx,1):$scope.talent.type.push(type)},$scope.toggleTypecast=function(typeCast){var idx=$scope.talent.typeCasts.indexOf(typeCast);idx>-1?$scope.talent.typeCasts.splice(idx,1):$scope.talent.typeCasts.push(typeCast)},$scope.toggleNewUnion=function(union){var idx=$scope.unionSelected.indexOf(union);idx>-1?$scope.unionSelected.splice(idx,1):$scope.unionSelected.push(union)},$scope.toggleNewUnionJoin=function(union){var idx=$scope.unionJoinSelected.indexOf(union);idx>-1?$scope.unionJoinSelected.splice(idx,1):$scope.unionJoinSelected.push(union)},$scope.toggleNewType=function(type){var idx=$scope.typeSelected.indexOf(type);idx>-1?$scope.typeSelected.splice(idx,1):$scope.typeSelected.push(type)},$scope.toggleNewTypecast=function(typeCast){var idx=$scope.selTypecasts.indexOf(typeCast);idx>-1?$scope.selTypecasts.splice(idx,1):$scope.selTypecasts.push(typeCast)},$scope.checkUnionStatus=function(unionVals){if("object"==typeof unionVals)for(var i=0;i<unionVals.length;++i)if("union"===unionVals[i])return!0;return!1},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.create=function(){new Talents({name:this.name,lastName:this.lastName,birthYear:this.birthYear,email:this.email,email2:this.email2,phone:this.phone,phone2:this.phone2,type:this.typeSelected,gender:this.gender,ageRange:this.ageRange,company:this.company,unionStatus:this.unionSelected,lastNameCode:this.lastNameCode,outageTimes:this.outageTimes,locationISDN:this.locationISDN,ISDNLine1:this.ISDNLine1,ISDNLine2:this.ISDNLine2,sourceConnectUsername:this.sourceConnectUsername,typeCasts:this.selTypecasts,exclusivity:this.exclusivity,parentName:this.parentName,producerOptional:this.producerOptional,unionJoined:this.unionJoinSelected,demoLink:this.demoLink,prefLanguage:this.prefLanguage,note:this.note}).$save(function(response){$modalInstance.close()},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("talents").controller("TalentsController",["$scope","$stateParams","$location","Authentication","Talents","UsersFind","$http","$rootScope","Socket",function($scope,$stateParams,$location,Authentication,Talents,UsersFind,$http,$rootScope,Socket){$scope.authentication=Authentication,$scope.talentsTotalCnt=0,$scope.filter={},$scope.watchersObj={},$scope.typeOptions=["Email","Phone"],$scope.unionOptions=["union","non-union"],$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.exclusivityOpts=["Non-Union Exclusive","Union","Non-Union Exclusive and Union","Foreign Language Agreement Non-Union","Foreign Language Agreement Union","Foreign Language Agreement Non-Union and Union","ISDN Non-Union","ISDN Union","ISDN Non-Union and Union","Independent Contractor Agreement Non-Union","Independent Contractor Agreement Union","Independent Contractor Agreement Non-Union and Union"],$scope.unionJoinedOpts=["SAG/AFTRA","OTHER"],$scope.unionSelected=[],$scope.unionJoinSelected=[],$scope.prefLangOpts=["English","Spanish"],$scope.typeSelected="Email",$scope.selTypecasts=[],$scope.prefLanguage="English",$scope.projectTalentIdx=[],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)","Missed","Canceled"],$scope.archived=!1,$scope.producers=[],UsersFind.query({userLevel:"producer/auditions director"},function(users){angular.forEach(users,function(user,key){$scope.producers.push(user)})}),UsersFind.query({userLevel:"admin"},function(users){angular.forEach(users,function(user,key){$scope.producers.push(user)})}),$scope.$on("$destroy",function(event){Socket.removeAllListeners()}),$scope.limitOverride=function(){$scope.limit=5e3},$scope.startsWith=function(actual,expected){return 0===(actual+"").toLowerCase().indexOf(expected.toLowerCase())},$scope.Math=window.Math,$scope.currentPage=0,$scope.filtered=[],$scope.limit=20,$scope.queryLimit=50,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input
},$scope.setPage=function(){$scope.currentPage=this.n,$scope.findLimitWithFilter()},$scope.changePage=function(page){var curSel=page*$scope.limit;curSel<$scope.talentsTotalCnt&&curSel>=0&&($scope.currentPage=page,$scope.findLimitWithFilter())},$scope.permitAdminDirector=function(){var allowRoles=["admin","talent director"],i=0,j=0,authRoles=Authentication.user.roles,limit=authRoles.length;for(i=0;i<limit;++i)for(j=0;j<allowRoles.length;++j)if(authRoles[i]===allowRoles[j])return!0},$scope.toggleUnion=function(union){var idx=$scope.talent.unionStatus.indexOf(union);idx>-1?$scope.talent.unionStatus.splice(idx,1):$scope.talent.unionStatus.push(union)},$scope.toggleUnionJoin=function(union){var idx=$scope.talent.unionJoined.indexOf(union);idx>-1?$scope.talent.unionJoined.splice(idx,1):$scope.talent.unionJoined.push(union)},$scope.toggleTypecast=function(typeCast){var idx=$scope.talent.typeCasts.indexOf(typeCast);idx>-1?$scope.talent.typeCasts.splice(idx,1):$scope.talent.typeCasts.push(typeCast)},$scope.toggleNewUnion=function(union){var idx=$scope.unionSelected.indexOf(union);idx>-1?$scope.unionSelected.splice(idx,1):$scope.unionSelected.push(union)},$scope.toggleNewUnionJoin=function(union){var idx=$scope.unionJoinSelected.indexOf(union);idx>-1?$scope.unionJoinSelected.splice(idx,1):$scope.unionJoinSelected.push(union)},$scope.toggleNewTypecast=function(typeCast){var idx=$scope.selTypecasts.indexOf(typeCast);idx>-1?$scope.selTypecasts.splice(idx,1):$scope.selTypecasts.push(typeCast)},$scope.checkUnionStatus=function(unionVals){if("object"==typeof unionVals)for(var i=0;i<unionVals.length;++i)if("union"===unionVals[i])return!0;return!1},$scope.create=function(){new Talents({name:this.name,lastName:this.lastName,email:this.email,email2:this.email2,phone:this.phone,phone2:this.phone2,type:this.typeSelected,gender:this.gender,ageRange:this.ageRange,company:this.company,unionStatus:this.unionSelected,lastNameCode:this.lastNameCode,outageTimes:this.outageTimes,locationISDN:this.locationISDN,ISDNLine1:this.ISDNLine1,ISDNLine2:this.ISDNLine2,sourceConnectUsername:this.sourceConnectUsername,typeCasts:this.selTypecasts,exclusivity:this.exclusivity,parentName:this.parentName,producerOptional:this.producerOptional,unionJoined:this.unionJoinSelected,demoLink:this.demoLink,prefLanguage:this.prefLanguage}).$save(function(response){$location.path("talents/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(talent){if(confirm("Are you sure?"))if(talent){talent.$remove();for(var i in $scope.talents)$scope.talents[i]===talent&&$scope.talents.splice(i,1)}else $scope.talent.$remove(function(){$location.path("talents")})},$scope.update=function(){var talent=$scope.talent;talent.$update(function(){$location.path("talents/"+talent._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.talents=Talents.query()},Socket.on("talentsListUpdate",function(){$scope.find()}),$scope.findOne=function(){$scope.talent=Talents.get({talentId:$stateParams.talentId})},$scope.findTalentProjects=function(){$scope.watchersObj["talent._id"]=$scope.$watchCollection("talent._id",function(val){$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data;var i=0,j=0,limit=data.length;for(i=0;i<limit;++i)for(j=0;j<data[i].talent.length;++j)data[i].talent[j].talentId===$scope.talent._id&&($scope.projectTalentIdx[i]=j)})})},$scope.sendTalentEmail=function(talent,project){$http.get("/projects/"+project._id,{}).success(function(data,status,headers,config){$http.post("/projects/sendtalentemail",{talent:talent,project:data}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data})})})},$scope.updateTalentStatus=function(project,talentId){$http.get("/projects/"+project._id,{}).success(function(data,status,headers,config){data.talent[talentId].status=project.talent[talentId].status,$http.post("/projects/updatetalentstatus",{project:data}).success(function(data,status,headers,config){$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data})})})},$scope.getOne=function(talentId){$scope.talent=Talents.get({talentId:talentId})},$scope.listFilter=function(){$scope.watchersObj["talent._id_flt"]=$scope.$watchCollection("talent._id",function(val){if(void 0!==$scope.talent._id){var listFilter={type:"talent",sharedKey:$scope.talent._id};$http.post("/logs/listFilter",{filter:listFilter}).success(function(data,status,headers,config){$scope.logs=data})}})},$scope.getFilterVars=function(){var filterObj={};return $scope.filter.fName&&(filterObj.fName=$scope.filter.fName),$scope.filter.lName&&(filterObj.lName=$scope.filter.lName),$scope.filter.email&&(filterObj.email=$scope.filter.email),$scope.filter.gender&&(filterObj.gender=$scope.filter.gender),$scope.filter.unionStatus&&(filterObj.unionStatus=$scope.filter.unionStatus),$scope.filter.type&&(filterObj.type=$scope.filter.type),$scope.filter.ageRange&&(filterObj.ageRange=$scope.filter.ageRange),$scope.filter.locationISDN&&(filterObj.locationISDN=$scope.filter.locationISDN),$scope.filter.typeCasts&&(filterObj.typeCasts=$scope.filter.typeCasts),filterObj},$scope.getTalentsCnt=function(){var filterObj=$scope.getFilterVars();$http.post("/talents/recCount",{filter:filterObj}).success(function(data,status,headers,config){$scope.talentsTotalCnt=data})},$scope.findLimitWithFilter=function(listFilter){var startVal=$scope.currentPage*$scope.limit,filterObj=$scope.getFilterVars();void 0!==listFilter&&(filterObj=Object.assign(filterObj,listFilter)),$http.post("/talents/findLimitWithFilter",{startVal:startVal,limitVal:$scope.limit,filter:filterObj}).success(function(data,status,headers,config){$scope.talents=[],$scope.talents=data,$scope.getTalentsCnt()})}}]),angular.module("talents").filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var country,city,number;switch(value.length){case 10:country=1,city=value.slice(0,3),number=value.slice(3);break;case 11:country=value[0],city=value.slice(1,4),number=value.slice(4);break;case 12:country=value.slice(0,3),city=value.slice(3,5),number=value.slice(5);break;default:return tel}return 1===country&&(country=""),number=number.slice(0,3)+"-"+number.slice(3),((""!==country?country+"-":"")+city+"-"+number).trim()}}),angular.module("talents").factory("Talents",["$resource",function($resource){return $resource("talents/:talentId",{talentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tools").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tools","tools","dropdown","/tools(/create)?",!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator"],1),Menus.addSubMenuItem("topbar","tools","ISDN Source Connect List","reports/isdn-source-connect-list"),Menus.addSubMenuItem("topbar","tools","Call List","tools/call-list"),Menus.addSubMenuItem("topbar","tools","Email Talent","tools/email-talent"),Menus.addSubMenuItem("topbar","tools","Backup/Restore","tools/backup-restore"),Menus.addSubMenuItem("topbar","tools","Delete Projects","tools/delete-projects",!1,!1,["admin","production coordinator"]),Menus.addSubMenuItem("topbar","tools","Talent Import","tools/talent-import"),Menus.addSubMenuItem("topbar","tools","Logs","logs",!1,!1,["admin"])}]),angular.module("tools").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTools",{url:"/tools",templateUrl:"modules/tools/views/list-tools.client.view.html"}).state("talentEmailTool",{url:"/tools/email-talent",templateUrl:"modules/tools/views/email-talent-tool.client.view.html"}).state("talentCallList",{url:"/tools/call-list",templateUrl:"modules/tools/views/call-list.client.view.html"}).state("toolDeleteProjects",{url:"/tools/delete-projects",templateUrl:"modules/tools/views/delete-projects.client.view.html"}).state("toolBackupProjects",{url:"/tools/backup-restore",templateUrl:"modules/tools/views/backup-projects.client.view.html"}).state("toolTalentImport",{url:"/tools/talent-import",templateUrl:"modules/tools/views/talent-import.client.view.html"}).state("toolListNewprojects",{url:"/tools/list-newprojects",templateUrl:"modules/tools/views/list-newprojects.client.view.html"}).state("toolNewprojectByID",{url:"/tools/new-project-byid/:newprojectId",templateUrl:"modules/tools/views/new-project-byid.client.view.html"})}]),angular.module("tools").controller("ToolsController",["$scope","$stateParams","$location","Authentication","Tools","Talents","$http","Socket","Projects","$upload",function($scope,$stateParams,$location,Authentication,Tools,Talents,$http,Socket,Projects,$upload){$scope.authentication=Authentication,$scope.projectsTotalCnt=0,$scope.project={},$scope.failed=[],$scope.alerts=[],$scope.verifySelected=[],$scope.rejFiles=[],$scope.files=[],$scope.emailClients=[],$scope.talents=[],$scope.email={all:"",subject:"",body:"",producerAssigned:""},$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.emailAssignedSwitch=!1,$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.callTalents=[],$scope.messagedTalents=[],$scope.alreadyScheduledTalents=[],$scope.talentNote=[],$scope.selectAll="",$scope.projects=[],$scope.projectsList=[],$scope.predicate="",$scope.reverse="",$scope.searchText={},$scope.google={spreadsheetkey:"",username:"",password:""},$scope.$on("$destroy",function(event){Socket.removeAllListeners()}),$scope.predicate="",$scope.updatePred=function(pred){$scope.predicate=pred},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$scope.Math=window.Math,$scope.currentPage=0,$scope.filtered=[],$scope.limit=20,$scope.queryLimit=50,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n,$scope.findLimitWithFilter()},$scope.changePage=function(page){var curSel=page*$scope.limit;curSel<$scope.projectsTotalCnt&&curSel>=0&&($scope.currentPage=page,$scope.findLimitWithFilter())},$scope.toggleEmailer=function(id,talent){var idx=$scope.emailClients.indexOf(id);idx>-1?$scope.emailClients.splice(idx,1):$scope.emailClients.push(id)},$scope.toggleEmailAssigned=function(){if($scope.emailAssignedSwitch)return void($scope.emailAssignedSwitch=!1);var talents=$scope.talents,limit=talents.length,i=0;for(i=0;i<limit;++i)talents[i].producerOptional===$scope.authentication.user.displayName&&$scope.toggleEmailer(talents[i]._id,talents[i])},$scope.checkToggleEmail=function(talentId){return $scope.emailClients.indexOf(talentId)>-1},$scope.gatherTalents=function(){$http.post("/talents/findLimitWithFilter",{startVal:0,limitVal:7e3,filter:{type:"Email"}}).success(function(data,status,headers,config){$scope.talents=data})},$scope.talentLookup=function(id){var talents=$scope.talents,limit=talents.length,i=0;for(i=0;i<limit;++i)if(talents[i]._id===id)return talents[i].name+" "+talents[i].lastName},$scope.toggleEmailTalentList=function(talent){var idx=$scope.verifySelected.indexOf(talent);idx>-1?$scope.verifySelected.splice(idx,1):$scope.verifySelected.push(talent)},$scope.emailTalentListChk=function(talent){for(var i=0;i<$scope.verifySelected.length;++i)if(String($scope.verifySelected[i])===String(talent))return!0},$scope.removeSelectedTalents=function(){var idx,i=0,j=0;for(i=0;i<$scope.verifySelected.length;++i)for(j=0;j<$scope.emailClients.length;++j)String($scope.verifySelected[i])===String($scope.emailClients[j])&&(idx=$scope.emailClients.indexOf($scope.emailClients[j]),idx>-1&&$scope.emailClients.splice(idx,1),(idx=$scope.verifySelected.indexOf($scope.emailClients[j]))>-1&&$scope.verifySelected.splice(idx,1))},$scope.sendTalentEmails=function(){!0===confirm("Are you sure you would like to send the entered email information to your selected talent?")&&(""!==$scope.email.subject&&""!==$scope.email.body?$http.post("/tools/sendtalentemails",{email:$scope.email,emailClients:$scope.emailClients}).success(function(data,status,headers,config){alert("Talent has been emailed!")}).error(function(data,status,headers,config){alert("An error occured while attempting to email selected clients. "+String(data.message))}):alert("Email subject and message cannot be empty!"))},Socket.on("callListUpdate",function(talentsData){switch(talentsData.filter){case"Cast":$scope.callProjects=talentsData.talents;break;case"Message left":$scope.messagedTalents=talentsData.talents;break;case"Scheduled":$scope.alreadyScheduledTalents=talentsData.talents;break;case"Emailed":$scope.emailedTalents=talentsData.talents;break;default:$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled(),$scope.gatherEmailedTalent()}}),$scope.talentLookupData=function(id){var talents=$scope.talents,limit=talents.length,i=0;for(i=0;i<limit;++i)if(String(talents[i]._id)===String(id))return talents[i]},$scope.gatherTalentsToCall=function(){$http.post("/tools/gatherTalentsToCall").success(function(data,status,headers,config){$scope.callProjects=data})},$scope.gatherTalentsMessagesLeft=function(){$http.post("/tools/gatherTalentsMessagesLeft").success(function(data,status,headers,config){$scope.messagedTalents=data})},$scope.gatherTalentsAlreadyScheduled=function(){$http.post("/tools/gatherTalentsAlreadyScheduled").success(function(data,status,headers,config){$scope.alreadyScheduledTalents=data})},$scope.gatherEmailedTalent=function(){$http.post("/tools/gatherEmailedTalent").success(function(data,status,headers,config){$scope.emailedTalents=data})},$scope.emailCallListTalent=function(talent,projectId){$http.post("/projects/sendTalentEmailById",{talent:talent,projectId:projectId,override:!0}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled(),$scope.gatherEmailedTalent()})},$scope.updateStatus=function(talentId,projectId,status){$http.post("/projects/updateSingleTalentStatus",{talentId:talentId,talentStatus:status,projectId:projectId}).success(function(data,status,headers,config){$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled(),$scope.gatherEmailedTalent()})},$scope.getProjectsCnt=function(){var filterObj=$scope.getFilterVars();$http.post("/projects/getProjectsCnt",{filter:filterObj}).success(function(data,status,headers,config){$scope.projectsTotalCnt=data})},$scope.getFilterVars=function(){var filterObj={};return $scope.searchText.title&&(filterObj.title=$scope.searchText.title),$scope.searchText.description&&(filterObj.description=$scope.searchText.description),$scope.sortText?filterObj.sortOrder=$scope.sortText:filterObj.sortOrder="created",$scope.sortTextOrder?filterObj.ascDesc=$scope.sortTextOrder:filterObj.ascDesc="desc",$scope.searchText.user?filterObj.myProjects=!0:filterObj.myProjects=!1,$scope.searchText.status&&(filterObj.status="In Progress"),filterObj},$scope.findProjects=function(){$scope.projects=Projects.query()},$scope.findLimitWithFilter=function(){var startVal=$scope.currentPage*$scope.limit,filterObj=$scope.getFilterVars();$http.post("/projects/findLimitWithFilter",{startVal:startVal,limitVal:$scope.limit,filter:filterObj}).success(function(data,status,headers,config){$scope.projects=[],$scope.projects=data,$scope.getProjectsCnt()})},$scope.toggleProject=function(id){var idx=$scope.projectsList.indexOf(id);idx>-1?$scope.projectsList.splice(idx,1):$scope.projectsList.push(id)},$scope.checkToggleProject=function(projectId){return $scope.projectsList.indexOf(projectId)>-1},$scope.selectAllProjects=function(){if($scope.projectsList=[],!0===$scope.selectAll)for(var i=0;i<$scope.projects.length;++i)$scope.projectsList.push($scope.projects[i]._id)},$scope.deleteProjects=function(){var i=0,limit=$scope.projectsList.length;if(limit>0){if(!0===confirm("Are you sure?")&&!0===confirm("Are you sure you're sure?"))for(i=0;i<limit;++i)$scope.performDeleteProject(i)}else alert("You must first select some projects!")},$scope.performDeleteProject=function(i){$http.post("/projects/deleteProjectById",{projectId:$scope.projectsList[i]}).success(function(data,status,headers,config){$scope.projects=Projects.query()})},$scope.backupProjects=function(){$scope.projectsList.length>0?!0===confirm("Are you sure?")&&$http.post("/projects/backupProjectsById",{projectList:$scope.projectsList}).success(function(data,status,headers,config){setTimeout(function(){var link=document.createElement("a");link.download=data.zippedFilename,link.href="res/archives/"+encodeURIComponent(data.zippedFilename),link.click()},1e3)}):alert("You must first select some projects!")},$scope.uploadBackupFile=function($files){var limit=$files.length,i=0;for(i=0;i<limit;i++){var file=$files[i];$scope.performUploadBackupFile(file,i,$files)}},$scope.performUploadBackupFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploadBackup",data:{},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){})},$scope.uploadTalentFile=function($files){var limit=$files.length,i=0;for(i=0;i<limit;i++){var file=$files[i];$scope.performUploadTalentFile(file,i,$files)}},$scope.performUploadTalentFile=function(file,i,$files){$scope.upload=$upload.upload({url:"tools/uploadTalentCSV",data:{},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.failed=data.failed,$scope.alerts.push({type:data.status,msg:"Updated talents "+data.updatedTalents+" - New talents "+data.newTalents+" - Failed talents "+data.failed.length})})},$scope.processGoogleSheet=function(){$scope.alerts=[],""!==$scope.google.spreadsheetkey?$http.post("/tools/processGoogleSheet",{google:$scope.google}).success(function(data,status,headers,config){$scope.alerts.push({type:"success",msg:"All talents have been imported into the database."})}):$scope.alerts.push({type:"danger",msg:"Pelase make sure that you have populated the field!"})},$scope.saveTalentNote=function(talentId,projectId){var newNote=$scope.talentNote[talentId][projectId];$http.post("/projects/updateTalentNote",{talentId:talentId,projectId:projectId,note:newNote}).success(function(data,status,headers,config){})},$scope.findNewProjects=function(){$http.post("/tools/listNewprojects",{}).success(function(data,status,headers,config){$scope.newprojects=data})},$scope.findNewProjectById=function(){$http.post("/tools/newprojectByID",{id:$stateParams.newprojectId}).success(function(data,status,headers,config){$scope.newproject=data})}}]),angular.module("tools").factory("Tools",["$resource",function($resource){return $resource("tools/:toolId",{toolId:"@_id"},{update:{method:"PUT"}})}]),angular.module("typecasts").run(["Menus","Authentication",function(Menus,Authentication){Menus.addSubMenuItem("topbar","talents","List Typecasts","typecasts",!1,!1,["admin","talent director"]),Menus.addSubMenuItem("topbar","talents","New Typecast","typecasts/create",!1,!1,["admin","talent director"])}]),angular.module("typecasts").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTypecasts",{url:"/typecasts",templateUrl:"modules/typecasts/views/list-typecasts.client.view.html"}).state("createTypecast",{url:"/typecasts/create",templateUrl:"modules/typecasts/views/create-typecast.client.view.html"}).state("viewTypecast",{url:"/typecasts/:typecastId",templateUrl:"modules/typecasts/views/view-typecast.client.view.html"}).state("editTypecast",{url:"/typecasts/:typecastId/edit",templateUrl:"modules/typecasts/views/edit-typecast.client.view.html"})}]),angular.module("typecasts").controller("TypecastsController",["$scope","$stateParams","$location","Authentication","Typecasts","Socket",function($scope,$stateParams,$location,Authentication,Typecasts,Socket){$scope.authentication=Authentication,$scope.newAtrribute="",$scope.$on("$destroy",function(event){Socket.removeAllListeners()}),$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.permitAdminDirector=function(){var allowRoles=["admin","producer/auditions director","auditions director","audio intern","talent director"],i=0,j=0,authRoles=Authentication.user.roles,limit=authRoles.length;for(i=0;i<limit;++i)for(j=0;j<allowRoles.length;++j)if(authRoles[i]===allowRoles[j])return!0},$scope.create=function(){new Typecasts({name:this.name,sort:this.sort}).$save(function(response){$location.path("typecasts/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(typecast){if(confirm("Are you sure?"))if(typecast){typecast.$remove();for(var i in $scope.typecasts)$scope.typecasts[i]===typecast&&$scope.typecasts.splice(i,1)}else $scope.typecast.$remove(function(){$location.path("typecasts")})},$scope.update=function(){var typecast=$scope.typecast;typecast.$update(function(){$location.path("typecasts/"+typecast._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.typecasts=Typecasts.query()},Socket.on("typecastsListUpdate",function(){$scope.find()}),$scope.findOne=function(){$scope.typecast=Typecasts.get({typecastId:$stateParams.typecastId})},$scope.addAttribute=function(){if(""!==$scope.newAtrribute){var typecast=$scope.typecast;typecast.attributes.push($scope.newAtrribute),typecast.$update(function(){$location.path("typecasts/"+typecast._id)},function(errorResponse){$scope.error=errorResponse.data.message}),$scope.newAtrribute=""}else alert("Please enter an attribute name!")},$scope.removeAttribute=function(key){var typecast=$scope.typecast;typecast.attributes.splice(key,1),typecast.$update(function(){$location.path("typecasts/"+typecast._id)},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("typecasts").factory("Typecasts",["$resource",function($resource){return $resource("typecasts/:typecastId",{typecastId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin")}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Users","users","dropdown","/usersedit(/create)?",!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator"],4),Menus.addSubMenuItem("topbar","users","Browse","usersedit",!1,!1,["admin","producer/auditions director","auditions director","audio intern","production coordinator"]),Menus.addSubMenuItem("topbar","users","New","usersedit/create",!1,!1,["admin"])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("users",{url:"/usersedit",templateUrl:"modules/users/views/list-users.client.view.html"}).state("newUser",{url:"/usersedit/create",templateUrl:"modules/users/views/create.client.view.html"}).state("viewUser",{url:"/usersedit/:userIdEdit",templateUrl:"modules/users/views/view-user.client.view.html"}).state("editUser",{url:"/usersedit/:userIdEdit/edit",templateUrl:"modules/users/views/edit-user.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,"admin"===$scope.authentication.user.roles[0]||"producer/auditions director"===$scope.authentication.user.roles[0]||"audio intern"===$scope.authentication.user.roles[0]||"auditions director"===$scope.authentication.user.roles[0]?$location.path("/projects"):"client"===$scope.authentication.user.roles[0]||"client-client"===$scope.authentication.user.roles[0]?$location.path("/clients/projects"):$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","$base64",function($scope,$http,$location,Users,Authentication,$base64){$scope.user=Authentication.user,$scope.roleOpts=["user","admin","producer/auditions director","auditions director","audio intern","talent","talent director","client","agency"],$scope.permitEveryOneButClients=function(){for(var allowRoles=["admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.user||$location.path("/"),$scope.decodedPass=function(encodedPass){var convertedPass="";return void 0!==encodedPass&&(convertedPass=$base64.decode(encodedPass)),convertedPass},$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){isValid?($scope.success=$scope.error=null,new Users($scope.user).$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})):$scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersListController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","$http","$rootScope",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,$http,$rootScope){$scope.authentication=Authentication,$scope.roleOpts=["client","client-client"],$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.find=function(){$scope.users=UsersEdit.query()},$scope.findFilter=function(selUserLevel){$scope.users=UsersFind.query({userLevel:selUserLevel})},$rootScope.$on("refresh",$scope.find()),$rootScope.$on("refreshListFilter",function(event,args){$scope.findFilter(args)}),$scope.findOne=function(){$scope.useredit=UsersEdit.get({userIdEdit:$stateParams.userIdEdit})}}]),angular.module("users").controller("UsersModalController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","$http","$modalInstance","$rootScope","owner",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,$http,$modalInstance,$rootScope,owner){$scope.authentication=Authentication,$scope.roleOpts=["client","client-client"],$scope.owner=owner,$scope.Math=window.Math,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.createModel=function(){var useredit={firstName:this.firstName,lastName:this.lastName,displayName:this.displayName,company:this.company,email:this.email,username:this.username,phone:this.phone,password:this.password,notes:this.notes,roles:this.roles};$http.post("/usersedit/create",useredit).success(function(data,status,headers,config){"client"===$scope.owner?$rootScope.$broadcast("refreshFilter","client"):$rootScope.$broadcast("refreshListFilter","client-client"),$modalInstance.close()}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","Talents","$http","$rootScope","$base64",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,Talents,$http,$rootScope,$base64){$scope.authentication=Authentication,$scope.roleOpts=["user","admin","producer/auditions director","auditions director","audio intern","production coordinator","talent director","client","client-client"],$scope.filter={},$scope.filterOverride="",$scope.usersTotalCnt=0,$scope.producerFilter="",$scope.foundTalent=[],$scope.loadPass=!1,$scope.Math=window.Math,$scope.currentPage=0,$scope.filtered=[],$scope.limit=20,$scope.queryLimit=50,$scope.range=function(min,max,step){step=step||1
;for(var input=[],i=min;i<=max;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n,$scope.findLimitWithFilter()},$scope.changePage=function(page){var curSel=page*$scope.limit;curSel<$scope.usersTotalCnt&&curSel>=0&&($scope.currentPage=page,$scope.findLimitWithFilter())},$scope.$watchCollection("filtered",function(val){$scope.currentPage=0},!0),$scope.find=function(){$scope.users=UsersEdit.query()},$scope.findFilter=function(selUserLevel){$scope.filterOverride=selUserLevel,$scope.findLimitWithFilter()},$rootScope.$on("refresh",$scope.find()),$rootScope.$on("refreshFilter",function(event,args){$scope.findFilter(args)}),$scope.decodedPass=function(encodedPass){var convertedPass="";return void 0!==encodedPass&&(convertedPass=$base64.decode(encodedPass)),convertedPass},$scope.findOne=function(){$scope.useredit=UsersEdit.get({userIdEdit:$stateParams.userIdEdit})},$scope.$watchCollection("useredit",function(){if(!1===$scope.loadPass&&void 0!==$scope.useredit&&void 0!==$scope.useredit._id){var storedPW=$scope.decodedPass($scope.useredit.passwordText);$scope.useredit.newpassword=storedPW,($scope.useredit.newpassword||""===storedPW)&&($scope.loadPass=!0)}}),$scope.getOne=function(userId){$scope.useredit=UsersEdit.get({userIdEdit:userId})},$scope.update=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new UsersEdit($scope.useredit);user.edited=Authentication,user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.remove=function(useredit){if(confirm("Are you sure?"))if(useredit){useredit.$remove();for(var i in $scope.users)$scope.users[i]===useredit&&$scope.users.splice(i,1)}else $scope.useredit.$remove(function(){$location.path("usersedit")})},$scope.create=function(){var useredit={firstName:this.firstName,lastName:this.lastName,displayName:this.displayName,company:this.company,email:this.email,username:this.username,phone:this.phone,password:this.password,notes:this.notes,roles:this.roles};$http.post("/usersedit/create",useredit).success(function(data,status,headers,config){$location.path("/usersedit")}).error(function(response){$scope.error=response.message})},$scope.getFilterVars=function(){var filterObj={};return $scope.filter.fName&&(filterObj.fName=$scope.filter.fName),$scope.filter.lName&&(filterObj.lName=$scope.filter.lName),$scope.filter.email&&(filterObj.email=$scope.filter.email),$scope.filter.company&&(filterObj.company=$scope.filter.company),$scope.filter.roles&&(filterObj.roles=$scope.filter.roles),filterObj},$scope.getUsersCnt=function(){var filterObj=$scope.getFilterVars();$scope.filterOverride&&(filterObj.roles=$scope.filterOverride),$http.post("/users/recCount",{filter:filterObj}).success(function(data,status,headers,config){$scope.usersTotalCnt=data})},$scope.findLimitWithFilter=function(listFilter){var startVal=$scope.currentPage*$scope.limit,filterObj=$scope.getFilterVars();void 0!==listFilter&&(filterObj=Object.assign(filterObj,listFilter)),$scope.filterOverride&&(filterObj.roles=$scope.filterOverride),$http.post("/users/findLimitWithFilter",{startVal:startVal,limitVal:$scope.limit,filter:filterObj}).success(function(data,status,headers,config){$scope.users=[],$scope.users=data,$scope.getUsersCnt()})},$scope.limitOverride=function(){$scope.limit=5e3},$scope.findTalent=function(){var filters={};filters=""===$scope.producerFilter?{producerOptional:{$in:[null,""]}}:{producerOptional:$scope.producerFilter},$http.post("/talents/findLimitWithFilter",{startVal:0,limitVal:5e4,filter:filters}).success(function(data,status,headers,config){$scope.foundTalent=data})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("UsersEdit",["$resource",function($resource){return $resource("usersedit/:userIdEdit",{userIdEdit:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("UsersFind",["$resource",function($resource){return $resource("usersfind/:userLevel",{userLevel:"@_id"},{update:{method:"PUT"}})}]);